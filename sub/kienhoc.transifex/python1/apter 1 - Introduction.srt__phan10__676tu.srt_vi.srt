847
00:37:00,240 --> 00:37:03,250
MHTHANH
cấp phát vùng nhớ đó, gán nhãn "x" cho nó, và ghi số 2 vào đó

848
00:37:03,250 --> 00:37:06,500
giống như là di chuyển số 2 vào x

849
00:37:06,500 --> 00:37:10,770
Sau đó, dòng này nói, lấy x cộng thêm 2

850
00:37:10,770 --> 00:37:13,120
rồi đặt giá trị tổng vào lại x

851
00:37:13,120 --> 00:37:16,190
Những dòng nhỏ có cấu trúc như chủ ngữ - vị ngữ

852
00:37:16,190 --> 00:37:18,380
Đặc biệt là với phép gán này

853
00:37:18,380 --> 00:37:20,930
Tiếp theo, "print" là một từ dành riêng

854
00:37:20,930 --> 00:37:23,280
Một từ trong danh sách trên slide trước

855
00:37:23,280 --> 00:37:24,196
Hãy tìm đọc nội dung biến đó

856
00:37:24,196 --> 00:37:27,815
Đây là 3 câu

857
00:37:27,815 --> 00:37:28,940
trong ngôn ngữ mới nhỏ bé của ta

858
00:37:28,940 --> 00:37:33,570

859
00:37:33,570 --> 00:37:34,070
OK

860
00:37:34,070 --> 00:37:34,960
Đó là các câu

861
00:37:34,960 --> 00:37:37,460
Giờ là các đoạn văn

862
00:37:37,460 --> 00:37:39,200
Hãy nói về các đoạn văn

863
00:37:39,200 --> 00:37:41,460
Đoạn văn là sự kết hợp các câu

864
00:37:41,460 --> 00:37:43,070
để cùng thể hiện một ý nghĩ

865
00:37:43,070 --> 00:37:46,270
Nhiều câu, nhiều dòng

866
00:37:46,270 --> 00:37:50,040
Giao diện Python tương tác mà tôi mới cho bạn xem

867
00:37:50,040 --> 00:37:55,310
thì khá ổn để chạy 1, 2, 5, hay 6 câu lệnh

868
00:37:55,310 --> 00:37:56,940
Nhưng sau này thì ta sẽ viết

869
00:37:56,940 --> 00:37:59,790
nhiều lệnh Python hơn nhiều

870
00:37:59,790 --> 00:38:02,220
Vì thế ta viết cái gọi là kịch bản Python

871
00:38:02,220 --> 00:38:07,400
hay còn gọi là chương trình Python, và đặt chúng vào trong 1 tập tin

872
00:38:07,400 --> 00:38:10,140
Nếu bạn đã xem qua phần điều kiện tiên quyết

873
00:38:10,140 --> 00:38:14,400
bạn đã thấy tôi viết trong 1 chương trình soạn thảo văn bản, lưu tập tin

874
00:38:14,400 --> 00:38:17,340
và chạy chương trình Python từ tập tin

875
00:38:17,340 --> 00:38:18,260
OK?

876
00:38:18,260 --> 00:38:20,730
Ta đặt ".py" vào đuôi của tên tập tin

877
00:38:20,730 --> 00:38:22,440
".py" vào đuôi của tên tập tin

878
00:38:22,440 --> 00:38:27,120
Ta cho Python một kịch bản để thi hành

879
00:38:27,120 --> 00:38:30,450
Trong chế độ tương tác, bạn gõ trực tiếp vào Python

880
00:38:30,450 --> 00:38:32,470
và nó làm ngay sau khi bạn ra lệnh

881
00:38:32,470 --> 00:38:34,000
Bạn vẫn làm theo một trình tự

882
00:38:34,000 --> 00:38:35,650
và trình tự thì quan trọng

883
00:38:35,650 --> 00:38:38,380
Trong một kịch bản, bạn gõ tất cả vào một tập tin và nói

884
00:38:38,380 --> 00:38:39,520
Python hãy chạy luôn tất cả

885
00:38:39,520 --> 00:38:44,850

886
00:38:44,850 --> 00:38:47,250
Bây giờ, khi bạn viết một trong những thứ này

887
00:38:47,250 --> 00:38:49,800
có những mẫu hình để kết hợp

888
00:38:49,800 --> 00:38:53,530
Có những thứ ta làm với những dòng này để xử lý chúng

889
00:38:53,530 --> 00:38:54,970
theo những cách khác nhau

890
00:38:54,970 --> 00:38:58,090
Nó như một công thức pha chế, một tập các chỉ dẫn

891
00:38:58,090 --> 00:39:00,160
Bắt đầu từ phía trên,

892
00:39:00,160 --> 00:39:02,370
nhưng phức tạp hơn một chút

893
00:39:02,370 --> 00:39:04,520
Một số bước được thực hiện tuần tự

894
00:39:04,520 --> 00:39:06,640
Một số bước có thể bị bỏ qua

895
00:39:06,640 --> 00:39:08,890
Một số bước ta thực hiện nhiều lần

896
00:39:08,890 --> 00:39:11,680
Có những khi ta có một tập các bước

897
00:39:11,680 --> 00:39:13,810
ta thực hiện lặp đi lặp lại

898
00:39:13,810 --> 00:39:15,820
Đây là một số hình ảnh

899
00:39:15,820 --> 00:39:19,050
Đây là 4 dòng mã Python

900
00:39:19,050 --> 00:39:21,030
một đoạn mã nhỏ đơn giản

901
00:39:21,030 --> 00:39:26,070
nó có 1 câu nói rằng x = 2, print x

902
00:39:26,070 --> 00:39:28,740
x = x + 2, nghĩa là lấy giá trị cũ của x

903
00:39:28,740 --> 00:39:31,730
cộng thêm 2, ghi lại vào x, và in x ra

904
00:39:31,730 --> 00:39:35,360
Kết quả của chương trình này là 2 rồi đến 4

905
00:39:35,360 --> 00:39:38,340
Vì x là 2, ta in nó ra, sau đó cộng thêm 2 vào

906
00:39:38,340 --> 00:39:40,690
rồi in ra lại lần nữa, nên nó là 4

907
00:39:40,690 --> 00:39:42,149
Biểu đồ tiến trình,
đừng lo lắng

908
00:39:42,149 --> 00:39:43,690
Tôi sẽ không bắt các bạn vẽ chúng

909
00:39:43,690 --> 00:39:45,470
Tôi chỉ vẽ chúng trong trường hợp

910
00:39:45,470 --> 00:39:49,210
chúng giúp bạn hiểu sự việc đang diễn ra dễ dàng hơn

911
00:39:49,210 --> 00:39:52,730
Bước đầu tiên là x = 1

912
00:39:52,730 --> 00:39:55,600
Một cách tuần tự, nó chạy tiếp lệnh print

913
00:39:55,600 --> 00:39:58,006
x = x + 1, 
chạy lệnh print

914
00:39:58,006 --> 00:39:59,380
Chỉ là chạy thẳng qua

915
00:39:59,380 --> 00:40:01,830
Sẽ có ý nghĩa hơn khi ta thấy một số thứ bị cuộn xoắn lại

916
00:40:01,830 --> 00:40:02,630
Sẽ có ý nghĩa hơn khi ta thấy một số thứ bị cuộn xoắn lại

917
00:40:02,630 --> 00:40:05,220
Chương trình này bắt đầu một cách tự nhiên

918
00:40:05,220 --> 00:40:07,860
Python bắt đầu từ phía trên cùng rồi chạy các lệnh phía dưới

919
00:40:07,860 --> 00:40:09,000
cho đến hết

920
00:40:09,000 --> 00:40:10,640
Đó là mã tuần tự

921
00:40:10,640 --> 00:40:14,150
Là thứ tự thực hiện bình thường

922
00:40:14,150 --> 00:40:17,730
Một bước có điều kiện có thể được thực hiện hoặc không

923
00:40:17,730 --> 00:40:19,270
Nếu ta chỉ có các bước tuần tự

924
00:40:19,270 --> 00:40:21,390
các chương trình sẽ trở nên hơi đần độn

925
00:40:21,390 --> 00:40:21,890
Phải không?

926
00:40:21,890 --> 00:40:25,560
Chúng sẽ giống như 
blah blah blah blah blah, dừng

927
00:40:25,560 --> 00:40:27,712
Vậy nên có những thứ như là,
nếu bạn làm điều này thì sao

928
00:40:27,712 --> 00:40:28,670
hay nếu bạn làm điều kia thì sao?

929
00:40:28,670 --> 00:40:32,110
ví dụ như, nếu bạn có nhiều hơn 40 giờ

930
00:40:32,110 --> 00:40:34,250
tôi sẽ trả bạn mức lương khác so với khi

931
00:40:34,250 --> 00:40:36,020
bạn có ít hơn 40 giờ

932
00:40:36,020 --> 00:40:39,760
Những thứ đó là "if"

933
00:40:39,760 --> 00:40:41,930
Trong Python, cách ta thể hiện điều này

934
00:40:41,930 --> 00:40:43,840
là sử dụng từ khoá "if"

935
00:40:43,840 --> 00:40:45,560
Ta nói x = 5

936
00:40:45,560 --> 00:40:48,710
và nói, nếu x nhỏ hơn 10

937
00:40:48,710 --> 00:40:50,970
-- đó là câu đang được hỏi --

938
00:40:50,970 --> 00:40:53,880
x có nhỏ hơn 10 không? có hay không?

939
00:40:53,880 --> 00:40:57,990
Nếu có, ta thực hiện lệnh thụt đầu dòng

940
00:40:57,990 --> 00:40:59,940
nếu không thì ta bỏ qua

