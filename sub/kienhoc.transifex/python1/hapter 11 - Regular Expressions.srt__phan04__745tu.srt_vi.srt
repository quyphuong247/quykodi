283
00:12:36,710 --> 00:12:39,920
Thao reviewed
số ký tự bất kì không phải khoảng trắng,
kết thúc bằng dấu hai chấm.

284
00:12:39,920 --> 00:12:41,540
Cả 2 đều True.

285
00:12:41,540 --> 00:12:45,700
Dòng này bắt đầu với X 
nhưng đằng sau không có dấu gạch ngang.

286
00:12:45,700 --> 00:12:48,200
Các ký tự này có khoảng trắng.

287
00:12:48,200 --> 00:12:49,360
Vì vậy, sẽ cho ra False.

288
00:12:49,360 --> 00:12:51,110
Dòng chữ này bắt đầu bằng X
và có dấu hai chấm

289
00:12:51,110 --> 00:12:52,850
nên khớp với bộ lọc trước.

290
00:12:52,850 --> 00:12:55,120
Nhưng bộ lọc này
thì cụ thể hơn.

291
00:12:55,120 --> 00:12:59,770

292
00:12:59,770 --> 00:13:01,397
OK, cụ thể hơn.

293
00:13:01,397 --> 00:13:02,730
Bộ lọc sẽ khớp với
những gì bạn yêu cầu.

294
00:13:02,730 --> 00:13:04,040
Nó tùy theo cái bạn cần tìm.

295
00:13:04,040 --> 00:13:06,373
Có thể là bạn cũng cần tìm
cả những dòng như thế này,

296
00:13:06,373 --> 00:13:07,030
tôi không biết được.

297
00:13:07,030 --> 00:13:10,530
Nhưng nếu muốn, bạn có thể chỉnh

298
00:13:10,530 --> 00:13:13,210
cho biểu thức chính quy

299
00:13:13,210 --> 00:13:15,120
phức tạp hơn rất nhiều.

300
00:13:15,120 --> 00:13:19,940
Tiếp theo ta bàn sang việc 
tách lấy thông tin.

301
00:13:19,940 --> 00:13:23,564
Trước giờ ta mới chỉ tìm kiếm xem có hay không.

302
00:13:23,564 --> 00:13:25,480
Nhưng khi tìm được kết quả rồi, ta thường

303
00:13:25,480 --> 00:13:27,120
phải tách nó ra thành
từng mẩu thông tin.

304
00:13:27,120 --> 00:13:30,450
Thực tế, ta có thể kết hợp
cả tìm kiếm và phân tách

305
00:13:30,450 --> 00:13:32,580
thành một câu lệnh.

306
00:13:32,580 --> 00:13:34,260
Thay vì dùng re.search()

307
00:13:34,260 --> 00:13:38,440
để đưa về giá trị True hoặc False,
ta dùng re.findall().

308
00:13:38,440 --> 00:13:43,440
Trong ví dụ này, tôi sẽ
dạy cho bạn một cú pháp mới.

309
00:13:43,440 --> 00:13:49,750
Dấu ngoặc vuông dùng trong
biểu thức chính quy

310
00:13:49,750 --> 00:13:52,960
đại diện cho một tập
các kí tự.

311
00:13:52,960 --> 00:13:57,720
Cách ghi này nghĩa là một ký tự

312
00:13:57,720 --> 00:14:01,920
là một số trong 
phạm vi từ 0 đến 9.

313
00:14:01,920 --> 00:14:04,730
Dấu cộng nghĩa là ký tự trước
có thể lặp lại 1 hay nhiều lần.

314
00:14:04,730 --> 00:14:08,590
Cả cụm này là 1 biểu thức chính quy

315
00:14:08,590 --> 00:14:11,600
biểu thị cho 1 hoặc nhiều chữ số.

316
00:14:11,600 --> 00:14:14,840
Bạn có thể đặt thêm
nhiểu thứ khác vào đây.

317
00:14:14,840 --> 00:14:19,530
Một dãy abcd

318
00:14:19,530 --> 00:14:20,364
chẳng hạn.

319
00:14:20,364 --> 00:14:23,030
Để khớp với 1 ký tự trong tập

320
00:14:23,030 --> 00:14:25,070
a, b, c, d.

321
00:14:25,070 --> 00:14:32,077
Hoặc bạn có thể đưa
1357 vào ngoặc vuông.

322
00:14:32,077 --> 00:14:34,410
Để khớp với 1 ký tự là 1, 3,

323
00:14:34,410 --> 00:14:35,590
5 hoặc 7.

324
00:14:35,590 --> 00:14:37,550
Tóm lại, dấu ngoặc vuông đại diện
1 tập hợp các ký tự cần tìm.

325
00:14:37,550 --> 00:14:40,974
Dấu gạch ngang bên trong
xác định phạm vi của ký tự.

326
00:14:40,974 --> 00:14:42,390
Và một lát nữa,

327
00:14:42,390 --> 00:14:44,280
ta sẽ nói về "not" trong
dấu ngoặc vuông

328
00:14:44,280 --> 00:14:45,206
Trong phao có đấy.

329
00:14:45,206 --> 00:14:48,560
Một lần nữa, hãy nhớ rằng
đây như là một ngôn ngữ

330
00:14:48,560 --> 00:14:49,970
lập trình thu nhỏ.

331
00:14:49,970 --> 00:14:52,820
Ta đưa các câu lệnh có sẵn cho hệ thống

332
00:14:52,820 --> 00:14:54,770
biểu thức chính quy. OK?

333
00:14:54,770 --> 00:14:58,080

334
00:14:58,080 --> 00:15:03,850
Ví dụ trong biểu thức ở đây

335
00:15:03,850 --> 00:15:09,340
ta yêu cầu chương trình
tìm một hay nhiều chữ số

336
00:15:09,340 --> 00:15:15,547
Một hay nhiều chữ số.

337
00:15:15,547 --> 00:15:17,130
Hệ thống sẽ quét qua 
chuỗi ký tự này

338
00:15:17,130 --> 00:15:20,550
và tìm tất cả các đoạn khớp với yêu cầu.

339
00:15:20,550 --> 00:15:22,560
Ở đây có 1 hay nhiều chữ số,

340
00:15:22,560 --> 00:15:24,640
đây cũng vậy,

341
00:15:24,640 --> 00:15:26,690
và đây nữa.

342
00:15:26,690 --> 00:15:30,510
Cuối cùng, re.findall() sẽ
đưa về một list các chuỗi ký tự

343
00:15:30,510 --> 00:15:31,800
mà hệ thống tìm thấy.

344
00:15:31,800 --> 00:15:32,580
Và trong suốt thời gian đó,

345
00:15:32,580 --> 00:15:33,288
hệ thống sẽ quét qua, quét lại

346
00:15:33,288 --> 00:15:35,090
để tìm thứ được yêu cầu.

347
00:15:35,090 --> 00:15:39,340
Và nó sẽ tìm thấy 2, 19, 42

348
00:15:39,340 --> 00:15:43,370
Nó sẽ tách ra các chuỗi ký tự trùng khớp

349
00:15:43,370 --> 00:15:47,590
và trả cho ta một list
các chuỗi ký tự.

350
00:15:47,590 --> 00:15:49,120
và trả cho ta một list
các chuỗi ký tự.

351
00:15:49,120 --> 00:15:52,570
Cũng giống như lệnh split()
nhưng nó thông minh hơn.

352
00:15:52,570 --> 00:15:53,370
Đúng không?

353
00:15:53,370 --> 00:15:56,630
Có thể nói nó là split(),
nhưng ta đưa chỉ thị cụ thể cho nó.

354
00:15:56,630 --> 00:16:04,560
Đây là một ví dụ.

355
00:16:04,560 --> 00:16:06,910
Ra lệnh tìm một hoặc nhiều chữ số


356
00:16:06,910 --> 00:16:10,290
và tách chúng ra được
2, 19 và 42

357
00:16:10,290 --> 00:16:12,990
Ở đây sử dụng cú pháp ngoặc vuông tương tự,

358
00:16:12,990 --> 00:16:17,630
ta ra lệnh tìm 1 ký tự là chữ cái in hoa
A, E, I, O,

359
00:16:17,630 --> 00:16:20,880
hoặc U xuất hiện 1 hoặc nhiều lần.

360
00:16:20,880 --> 00:16:24,480
Nếu nhìn kĩ bạn sẽ thấy chuỗi này
không có nguyên âm in hoa nào.

361
00:16:24,480 --> 00:16:26,360
Nhưng tôi lại ra lệnh tìm
tất cả các ký tự khớp với

362
00:16:26,360 --> 00:16:32,500
A, E, I, O, U.
Vậy các kết quả khớp có thể là AA

363
00:16:32,500 --> 00:16:36,980
hay OU chẳng hạn.

364
00:16:36,980 --> 00:16:40,550
Và đó sẽ là kết quả nhận được
nếu chúng có tồn tại trong chuỗi đưa ra

365
00:16:40,550 --> 00:16:43,705
Nhưng không có ký tự nào khớp nên
ta được kết quả là chuỗi rỗng.

366
00:16:43,705 --> 00:16:45,830
Mặc dù không tìm thấy,
nó trả về chuỗi giá trị rỗng.

367
00:16:45,830 --> 00:16:48,270
Vậy re.findall() luôn luôn trả về một chuỗi.

368
00:16:48,270 --> 00:16:51,340
Dù cho độ dài chuỗi
trả về là 0.

369
00:16:51,340 --> 00:16:55,290
Đó là cái ta cần kiểm tra. OK?

370
00:16:55,290 --> 00:17:00,980

371
00:17:00,980 --> 00:17:06,490
Trong lọc thông tin có một
khái niệm gọi là tham lam.

372
00:17:06,490 --> 00:17:11,510
Khi cho dấu cộng hay dấu sao vào,

373
00:17:11,510 --> 00:17:15,630
nó sẽ mở rộng mức độ tìm kiếm ra.

374
00:17:15,630 --> 00:17:18,349
Khi ta yêu cầu tìm một chuỗi ký tự

375
00:17:18,349 --> 00:17:21,540
bắt đầu bằng F đầu dòng và kế đến

376
00:17:21,540 --> 00:17:24,730
là một hoặc một vài kí tự với dấu hai chấm,

