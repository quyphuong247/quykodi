1
00:00:08,587 --> 00:00:12,444
https://youtu.be/DWf8MIkh14M
So welcome back to lunch, right? If you
remember the morning the last lecture we

2
00:00:12,444 --> 00:00:15,776
argued, we drank a bunch of coffee,
we scribbled on white boards,

3
00:00:15,776 --> 00:00:19,740
we erased white boards, and
we argued about where the genre belonged.

4
00:00:19,740 --> 00:00:20,570
But when we were all said and

5
00:00:20,570 --> 00:00:22,680
done we ended up with this picture
its still on the white board and

6
00:00:22,680 --> 00:00:24,440
we're coming back from lunch now.

7
00:00:24,440 --> 00:00:28,880
This is now how databases represent data.
We have to be a little more explicit. There's

8
00:00:28,880 --> 00:00:33,570
no like belongs to magic in databases but
when you're building your data model you

9
00:00:33,570 --> 00:00:37,640
don't want to be thinking explicitly too
much about the database. You turn this

10
00:00:37,640 --> 00:00:43,240
"logical" model into what we call a physical
model, by mapping it into the database.

11
00:00:43,240 --> 00:00:47,860
So, what we do is we just take each of
the tables, and the relationships between

12
00:00:47,860 --> 00:00:51,960
the tables, and we have to augment
them with little bits of information.

13
00:00:51,960 --> 00:00:55,960
And so, here's the track table, and
so we'll make a table called Track.

14
00:00:55,960 --> 00:00:59,440
And we take like title, rating,
length, and count, and

15
00:00:59,440 --> 00:01:03,030
they become just columns in the table.
That's the data we have to represent.

16
00:01:03,030 --> 00:01:06,520
And then we tend to add things to it.

17
00:01:06,520 --> 00:01:10,030
And so we're going to add what
we call a primary key.

18
00:01:10,030 --> 00:01:12,880
And a primary key is a way

19
00:01:12,880 --> 00:01:19,135
for us to refer to a particular row, and
so it's a unique number like 1, 2, 3, 4.

20
00:01:19,135 --> 00:01:22,977
So each album is going to
end up with a number.

21
00:01:22,977 --> 00:01:26,330
We'll put insert the title and
the title will get a number.

22
00:01:26,330 --> 00:01:26,990
Right?

23
00:01:26,990 --> 00:01:34,640
And then we use that number in a column of
a different table to sort of point to it.

24
00:01:34,640 --> 00:01:40,190
So these primary keys are the endpoints
that we're pointing to.

25
00:01:40,190 --> 00:01:44,080
So that we can create an arrow
to a particular album,

26
00:01:44,080 --> 00:01:46,040
we've got to add a id to it.

27
00:01:46,040 --> 00:01:47,520
So we add a primary key.

28
00:01:49,040 --> 00:01:53,120
And then the other thing we do is we have
to add the columns that are the other end

29
00:01:53,120 --> 00:01:57,090
of the arrow, the starting point of the arrow.

30
00:01:57,090 --> 00:02:02,320
And so I'm by convention, in this particular
model, I'm naming primary keys all id.

31
00:02:02,320 --> 00:02:08,560
In track you've got to think all id and
then album_id is sort of the starting point.

32
00:02:08,560 --> 00:02:13,210
So album is the name of a table,
followed by underscore, followed by id.

33
00:02:13,210 --> 00:02:15,410
Now, there's no rules about
how you name these things.

34
00:02:15,410 --> 00:02:19,335
These could be named X and
Y if you wanted to but,

35
00:02:19,335 --> 00:02:23,435
as we've learned in programming Python,
and other programming languages,

36
00:02:23,435 --> 00:02:27,585
making sensible names really reduces
the cognitive load of understanding what

37
00:02:27,585 --> 00:02:30,365
the heck you meant
when you were creating this.

38
00:02:30,365 --> 00:02:33,575
So we create a convention,
a naming convention.

39
00:02:33,575 --> 00:02:36,395
And, the, we have terminology for
each of these things.

40
00:02:36,395 --> 00:02:40,655
A primary key is the key for
which there's one key for every row.

41
00:02:40,655 --> 00:02:44,760
It's used as the way to point
to that row in other tables.

42
00:02:44,760 --> 00:02:47,540
The foreign key is one
of these columns that we add

43
00:02:47,540 --> 00:02:49,300
to be the starting point of the arrows.

44
00:02:49,300 --> 00:02:51,970
The primary key's the ending
point of the arrow and

45
00:02:51,970 --> 00:02:55,060
the foreign key is the starting
point of the arrow.

46
00:02:55,060 --> 00:02:58,420
The only other thing
that we do is we may or

47
00:02:58,420 --> 00:03:02,030
may not designate one of the columns,
sometimes more than one,

48
00:03:02,030 --> 00:03:03,910
as what's called the logical key.

49
00:03:03,910 --> 00:03:06,600
The logical key is that

50
00:03:06,600 --> 00:03:12,200
unique thing that we might use to look
up this row from the outside world.

51
00:03:12,200 --> 00:03:15,140
In this case, the album title
might be a way we'd look it up.

52
00:03:15,140 --> 00:03:18,070
Like, oh, where is Led Zeppelin IV.

53
00:03:18,070 --> 00:03:20,060
Type in IV and it'll search it.

54
00:03:20,060 --> 00:03:23,320
So Led Zeppelin IV is going to be the title.

55
00:03:23,320 --> 00:03:25,450
Now all we are doing is saying,

56
00:03:25,450 --> 00:03:30,300
hey database, we're not looking these
folks up by rating or length or count.

57
00:03:30,300 --> 00:03:32,910
But we might be looking
tracks up by title.

58
00:03:32,910 --> 00:03:36,660
So, somehow on your storage

59
00:03:36,660 --> 00:03:41,020
maybe you leave some shortcuts to get to
this more efficiently or more effectively.

60
00:03:41,020 --> 00:03:45,030
So the logical key is really our
way of saying we might use this

61
00:03:45,030 --> 00:03:45,900
in a WHERE clause.

62
00:03:46,990 --> 00:03:49,150
We might use it in a WHERE clause,
help me out out here.

63
00:03:49,150 --> 00:03:50,550
We might use it in a WHERE clause.

64
00:03:51,860 --> 00:03:55,040
And it also sometimes, it's like we also
might use it in an ORDER BY clause or

65
00:03:55,040 --> 00:03:55,650
a WHERE clause.

66
00:03:55,650 --> 00:03:56,760
And so that's the logical keys.

67
00:03:56,760 --> 00:04:02,410
So we have these three things, primary
keys, logical keys, and foreign keys.

68
00:04:02,410 --> 00:04:05,880
And so if we keep drawing these
pictures it starts looking complex but

69
00:04:05,880 --> 00:04:07,250
then it turns out really simple.

70
00:04:07,250 --> 00:04:12,400
If we take the whole data model and
sort of add these primary keys,

71
00:04:12,400 --> 00:04:16,270
logical keys, and foreign keys to
model the beginnings and ends,

72
00:04:16,270 --> 00:04:19,240
the beginning and end of arrow,
beginning and end of arrows, beginning

73
00:04:19,240 --> 00:04:22,930
and ending of arrows, we have to stick
primary keys in all the tables.

74
00:04:23,940 --> 00:04:26,800
We stick foreign keys in those
tables that have starting points.

75
00:04:28,100 --> 00:04:31,760
And then we indicate that certain
things are our logical keys.

76
00:04:31,760 --> 00:04:35,090
It looks kind of complex, but
once you've drawn the picture,

77
00:04:35,090 --> 00:04:39,220
and you have the naming convention for
what you're going to name these things,

78
00:04:39,220 --> 00:04:42,130
it's a surprisingly manual task.

79
00:04:42,130 --> 00:04:45,570
The mapping from
the logical to the physical

80
00:04:45,570 --> 00:04:49,220
is beautifully simple as long
as you have a naming convention.

81
00:04:49,220 --> 00:04:53,880
Now, if you walk into an organization and
you took this class and you say like

82
00:04:53,880 --> 00:04:55,300
Dr. Chuck's naming convention is awesome.

83
00:04:55,300 --> 00:04:55,880
As a matter of fact,

84
00:04:55,880 --> 00:04:58,900
I stole this naming convention
from a thing called Ruby on Rails.

85
00:04:58,900 --> 00:05:01,180
The name of the id, the artist_id.

86
00:05:01,180 --> 00:05:02,400
It's a good naming convention.

87
00:05:03,420 --> 00:05:05,160
And naming conventions
are kind of like artistic.

88
00:05:05,160 --> 00:05:08,370
Some you think are prettier or not
prettier, but any naming convention works.

89
00:05:08,370 --> 00:05:10,655
And you walk in and you go like oh,
I took this class and

90
00:05:10,655 --> 00:05:15,710
I learned this naming convention of
id and table_id and they'll say well

91
00:05:15,710 --> 00:05:21,098
we don't use that, we use this thing where
we start with a lowercase i and the we

92
00:05:21,098 --> 00:05:25,590
uppercase the iTrackID, that that
would be their primary key for

93
00:05:25,590 --> 00:05:30,120
a track, or maybe they call it
pTrack Id for primary key, right?

94
00:05:30,120 --> 00:05:33,235
So that would be the name of this thing and
you're in this company and you're like whoa.

95
00:05:33,235 --> 00:05:39,620
pTrackId, that looks like crap. it's a
terrible, stupid idea. Well, don't do that.

96
00:05:39,620 --> 00:05:44,630
I mean, this is not a superior
naming convention to this other one,

97
00:05:44,630 --> 00:05:47,360
however they do this other one, right?

98
00:05:47,360 --> 00:05:50,350
What's important is that there is a naming
convention, and when you work for

99
00:05:50,350 --> 00:05:52,760
a company. just learn their
naming convention, and

100
00:05:52,760 --> 00:05:55,960
don't complain about their naming
convention, unless you get to know them or

101
00:05:55,960 --> 00:05:59,520
maybe you're sort of out for coffee or
something later and you're like,

102
00:05:59,520 --> 00:06:03,760
well, how come you guys never did the
cool Ruby on Rails naming convention?

103
00:06:03,760 --> 00:06:08,180
I took a class and it was pretty cool as
long as you're nice and you don't threaten

104
00:06:08,180 --> 00:06:12,470
them and don't tell them how dumb they are
by choosing the wrong naming convention.

105
00:06:12,470 --> 00:06:17,939
So now what we're going to do is we're
going to turn this into a new table.

106
00:06:18,970 --> 00:06:24,510
Okay, and so I'm going to use the wizard to
make new table in our little database.

107
00:06:24,510 --> 00:06:28,130
Let's go over to,
we're still in our database.

108
00:06:29,210 --> 00:06:31,160
And I am going to go
to Database Structure.

109
00:06:32,280 --> 00:06:33,880
Where's the new table button?

110
00:06:33,880 --> 00:06:34,600
New table, new table.

111
00:06:36,100 --> 00:06:36,600
File.

112
00:06:37,650 --> 00:06:39,360
New table, create table.

113
00:06:39,360 --> 00:06:40,710
There we go. Edit, create table.

114
00:06:42,060 --> 00:06:47,381
Okay, so we are going to create a table,
and I need to kind of look at

115
00:06:47,381 --> 00:06:51,400
I'm looking for my cheat sheet.
We'll start with the Artist table.

116
00:06:53,110 --> 00:06:58,570
The Artist table, and
we're going to add a field to it and

117
00:06:58,570 --> 00:07:03,220
we are going to name the first field an id
field, and it's going to be a number.

118
00:07:03,220 --> 00:07:08,060
We are going to say that it's not null,
it's a primary key.

119
00:07:08,060 --> 00:07:11,390
We're telling it that we're
going to use this a lot and

120
00:07:11,390 --> 00:07:14,470
if we're linking into this table,
that means we're using it a lot.

121
00:07:15,570 --> 00:07:18,380
Auto increment,
it means we as the programmer

122
00:07:18,380 --> 00:07:22,310
don't actually have to specify this value,
it's going to be automatically specified.

123
00:07:22,310 --> 00:07:26,110
Because pretty much 1, 2, 3, 4, 5 are
the values that we're going to use.

124
00:07:26,110 --> 00:07:30,020
And then unsigned is whether
it's positive or negative.

125
00:07:30,020 --> 00:07:32,950
And for this one I'm going to leave that off.

126
00:07:32,950 --> 00:07:35,800
The other thing that's in this in
our little table, let's go back and

127
00:07:35,800 --> 00:07:37,504
look at our little picture, is the name.

128
00:07:40,504 --> 00:07:45,510
Add another field and
we'll name that name. Oops.

129
00:07:45,510 --> 00:07:46,110
Lowercase name.

130
00:07:46,110 --> 00:07:49,530
And we will make that a text field.

131
00:07:50,990 --> 00:07:53,740
And in this case we're not
going to give it a length.

132
00:07:53,740 --> 00:07:57,900
And, there's a way later we'll
give other ones lengths.

133
00:07:57,900 --> 00:07:59,220
And then we are going
to hit the OK button.

134
00:08:00,310 --> 00:08:04,610
And when it's all said and
done we have an Artist table, okay?

135
00:08:04,610 --> 00:08:06,800
This is our old Users table,
this is our Artist table.

136
00:08:06,800 --> 00:08:09,310
We could make a whole new
database if we wanted, but

137
00:08:09,310 --> 00:08:11,750
we're not going to, we're just
going to put all these things in.

138
00:08:11,750 --> 00:08:13,010
Actually, let's just get rid of this table.

139
00:08:13,010 --> 00:08:15,620
Get rid of Users. Edit, Delete Table.

140
00:08:16,790 --> 00:08:17,890
Good bye User table.

141
00:08:17,890 --> 00:08:19,230
That was from the previous lecture.

142
00:08:19,230 --> 00:08:20,940
So now we have an Artist table.

143
00:08:20,940 --> 00:08:24,610
Okay? So that's the wizard way
of creating a table.

144
00:08:26,080 --> 00:08:27,880
The next table we're going to
create is the Genre table.

145
00:08:27,880 --> 00:08:31,650
Now the idea is we tend
to work from outward in.

146
00:08:31,650 --> 00:08:34,010
The leaves of this tree outward in.

147
00:08:34,010 --> 00:08:36,300
So we created the Artist table
then we'll create the Genre table,

148
00:08:36,300 --> 00:08:37,420
then we'll create the Album table.

149
00:08:37,420 --> 00:08:40,550
And then we'll create the Track table
because you kind of want to create

150
00:08:40,550 --> 00:08:43,570
the ends of the arrows before you create
the beginnings of the arrows, okay?

151
00:08:45,030 --> 00:08:46,660
So we'll create the Genre, and

152
00:08:46,660 --> 00:08:50,060
now I'm just going to use to SQL because
that's a lot quicker for me to type.

153
00:08:50,060 --> 00:08:53,400
Here's the CREATE TABLE, we're going
to say that this guy is an INTEGER,

154
00:08:53,400 --> 00:08:57,210
it's NOT NULL, it's got a PRIMARY KEY
and it's AUTOINCREMENT, and it's UNIQUE.

155
00:08:57,210 --> 00:08:59,250
And that is our way of saying

156
00:08:59,250 --> 00:09:00,830
give each row a little number.

157
00:09:02,070 --> 00:09:04,765
So we go to Execute SQL and
I put this thing in here.

158
00:09:04,765 --> 00:09:08,712
And then I run it.

159
00:09:08,712 --> 00:09:13,593
It worked and if I take a look at
our Browse Data or

160
00:09:13,593 --> 00:09:19,779
our Database Structure, Genre is
in there and Genre has two columns,

161
00:09:19,779 --> 00:09:23,921
id and name. And
then we have the other tables.

162
00:09:23,921 --> 00:09:25,150
So now we're going to
create the Album table.

163
00:09:25,150 --> 00:09:27,980
Now the thing that's different
about the Album table

164
00:09:27,980 --> 00:09:30,950
is that the Album table is our
first example of a foreign key.

165
00:09:30,950 --> 00:09:32,590
So this is our foreign key.

166
00:09:32,590 --> 00:09:35,060
We've been putting primary
keys in every table.

167
00:09:35,060 --> 00:09:37,190
Primary key pretty much say this over and

168
00:09:37,190 --> 00:09:41,390
over and over again, this long INTEGER
NOT NULL PRIMARY KEY AUTOINCREMENT UNIQUE.

169
00:09:41,390 --> 00:09:43,270
Just say that over and
over and over again.

170
00:09:43,270 --> 00:09:47,460
Now, we're going to have
a foreign key which is the start,

171
00:09:47,460 --> 00:09:49,290
the foreign key, primary key.

172
00:09:50,660 --> 00:09:53,000
Right? And so, we're just going
to call that an integer.

173
00:09:53,000 --> 00:09:56,360
In other databases you can add some
stuff to it, talk about

174
00:09:56,360 --> 00:09:58,830
what to do with the parent thing, but
we're not going to do that for now.

175
00:09:58,830 --> 00:10:01,960
We're just going to say that's an integer,
that's a starting point of an arrow.

176
00:10:01,960 --> 00:10:07,160
And we're naming it artist_id
just to jog our memory

177
00:10:07,160 --> 00:10:11,140
that that's what's going on there.

178
00:10:11,140 --> 00:10:16,480
Put SQL, paste it, run it, poof she works.

179
00:10:16,480 --> 00:10:20,760
Database Structure. Now we got Genre,
and let's look at the last one.

180
00:10:20,760 --> 00:10:24,210
Okay? So the last one is the track.

181
00:10:24,210 --> 00:10:27,600
Okay? So CREATE TABLE,
the name of the table.

182
00:10:27,600 --> 00:10:31,610
We've got this sort of thing that by now
we're cut and paste a bunch of times.

183
00:10:31,610 --> 00:10:34,250
We have a primary key,
we have a logical key.

184
00:10:34,250 --> 00:10:36,300
It just happens to be green, it's TEXT.

185
00:10:36,300 --> 00:10:37,890
And then we have two foreign keys.

186
00:10:37,890 --> 00:10:41,289
Because if you remember,
there were two arrows coming out of Track.

187
00:10:42,500 --> 00:10:44,590
Both to Album and to Genre.

188
00:10:44,590 --> 00:10:46,312
So remember, oh, Album.

189
00:10:46,312 --> 00:10:48,580
album_id, genre_id.

190
00:10:48,580 --> 00:10:50,450
Naming convention is your friend.

191
00:10:50,450 --> 00:10:52,640
And then we just have some stuff
that's integers like the length,

192
00:10:52,640 --> 00:10:53,790
the rating, and the count.

193
00:10:53,790 --> 00:10:54,890
Then we put those in.

194
00:10:54,890 --> 00:10:59,135
So now we have the columns and the rows
and all the foreign keys for Track.

195
00:10:59,135 --> 00:11:04,337
And then we will run that.

196
00:11:04,337 --> 00:11:09,229
And if we take a look at the data
we will see

197
00:11:09,229 --> 00:11:14,129
we got all of them done.
Album is now complex.

198
00:11:14,129 --> 00:11:14,730
And all these things.

199
00:11:24,671 --> 00:11:25,260
Wait a sec, did I not?

200
00:11:25,260 --> 00:11:27,090
What did I get wrong here?

201
00:11:27,090 --> 00:11:28,870
Oh, no, Track is the complex one.

202
00:11:28,870 --> 00:11:30,190
So Track has a bunch of stuff.

203
00:11:30,190 --> 00:11:35,050
So there we go. So if we take a look at,
we've got all of these things, and

204
00:11:35,050 --> 00:11:39,460
we have translated our logical
model into a physical model, and

205
00:11:39,460 --> 00:11:42,800
we translated the physical model
into a series of CREATE statements.

206
00:11:42,800 --> 00:11:44,270
And we've run those CREATE statements, and

207
00:11:44,270 --> 00:11:48,500
now we've represented the various kinds of
tables that we want to insert data into.

208
00:11:48,500 --> 00:11:50,640
So we're going to stop here.

209
00:11:50,640 --> 00:11:53,700
But next we're going to start
inserting data into these tables.