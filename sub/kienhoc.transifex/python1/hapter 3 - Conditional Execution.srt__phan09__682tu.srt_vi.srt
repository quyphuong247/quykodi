761
00:34:00,940 --> 00:34:03,130
Thao Tran
Nếu chạy được thì tốt.

762
00:34:03,130 --> 00:34:07,380
Nếu không thì nó chạy đoạn này và đặt giá trị bằng -1.

763
00:34:07,380 --> 00:34:11,820
Sau đó ta sẽ nhận được một con số hoặc -1.

764
00:34:11,820 --> 00:34:17,409
Vậy nếu người dùng nhập 42, chương trình báo "Nice work" (Tốt).

765
00:34:17,409 --> 00:34:19,409
Ta xem cách hoạt động của nó nhé.

766
00:34:19,409 --> 00:34:22,989
Khi người dùng nhập 42, chương trình chạy đến đây,

767
00:34:22,989 --> 00:34:25,340
nhận chuỗi ký tự 42, chuyển thành số nguyên,

768
00:34:25,340 --> 00:34:28,030
nhảy cóc đến đây, rồi báo "Nice work".

769
00:34:28,030 --> 00:34:29,639
Nó hoạt động như vậy đấy.

770
00:34:29,639 --> 00:34:32,710
Nhưng nếu người dùng nhập "fourtytwo" (bốn mươi hai)

771
00:34:32,710 --> 00:34:37,040
bằng chữ ấy, chuỗi ký tự là fourtytwo.

772
00:34:37,040 --> 00:34:38,370
Nó chạy đến đây.

773
00:34:38,370 --> 00:34:43,100
Ở đây gặp lỗi nên chương trình chạy đoạn này.

774
00:34:43,100 --> 00:34:46,500
Sau đó đến đoạn if ival > 0 không đúng

775
00:34:46,500 --> 00:34:50,500
nên chương trình in "Not a number" (Không phải số).

776
00:34:50,500 --> 00:34:54,370
Vậy đây là cách ta xử lý trường hợp dữ liệu

777
00:34:54,370 --> 00:34:56,630
người dùng nhập có lỗi.

778
00:34:56,630 --> 00:35:00,800
Đây là các lỗi ta tiên liệu trước, vì nếu ta đang viết code

779
00:35:00,800 --> 00:35:03,580
cho người khác thì ít nhất ta cũng

780
00:35:03,580 --> 00:35:05,080
muốn có thông báo rõ ràng

781
00:35:05,080 --> 00:35:06,810
thay vì chỉ hiện đoạn traceback.

782
00:35:06,810 --> 00:35:08,950
Nó không được tử tế lắm.

783
00:35:08,950 --> 00:35:16,100

784
00:35:16,100 --> 00:35:19,090
Chương trình điển hình dùng câu lệnh này là

785
00:35:19,090 --> 00:35:20,590
tính gấp rưỡi tiền lương ngoài giờ.

786
00:35:20,590 --> 00:35:23,200

787
00:35:23,200 --> 00:35:26,050
Ví dụ, bạn có mức lương là $10 một giờ

788
00:35:26,050 --> 00:35:27,320
với 40 giờ làm việc đầu tiên.

789
00:35:27,320 --> 00:35:30,190
Với mỗi giờ làm thêm trên mức đó bạn được $15.

790
00:35:30,190 --> 00:35:33,700
Vậy bạn phải hình dung

791
00:35:33,700 --> 00:35:37,040
đây là tình huống mà

792
00:35:37,040 --> 00:35:40,460
để tôi vẽ lại hình này,

793
00:35:40,460 --> 00:35:45,019
nếu số giờ làm lớn hơn 40 thì làm thế này.

794
00:35:45,019 --> 00:35:46,560
Nếu số giờ nhỏ hơn 40 thì

795
00:35:46,560 --> 00:35:47,760
làm thế kia.

796
00:35:47,760 --> 00:35:49,800
Vậy ta có hai cách tính tiền lương.

797
00:35:49,800 --> 00:35:51,630
Nếu số giờ lớn hơn 40

798
00:35:51,630 --> 00:35:55,180
thì thực hiện phép tính tiền làm thêm giờ

799
00:35:55,180 --> 00:35:58,870
là 40 nhân mức lương thường

800
00:35:58,870 --> 00:36:02,650
cộng với số giờ làm thêm, ví dụ là 5,

801
00:36:02,650 --> 00:36:05,620
nhân mức lương nhân 1,5.

802
00:36:05,620 --> 00:36:07,370
Đây là phép tính sẽ được

803
00:36:07,370 --> 00:36:10,530
thực hiện nếu số giờ lớn hơn 40.

804
00:36:10,530 --> 00:36:13,260
Còn nếu số giờ nhỏ hơn 40

805
00:36:13,260 --> 00:36:18,660
thì tiền lương chỉ là mức lương nhân số giờ.

806
00:36:18,660 --> 00:36:22,500
Vậy ta sẽ thực hiện một trong hai phép tính

807
00:36:22,500 --> 00:36:23,950
tùy tình huống.

808
00:36:23,950 --> 00:36:27,710
Đây là một trong các bài tập lập trình ở chương này.

809
00:36:27,710 --> 00:36:29,300
Một dạng bài điển hình,

810
00:36:29,300 --> 00:36:30,892
là dạng if then else.

811
00:36:30,892 --> 00:36:33,100
Bạn nào khôn khéo thì chỉ dùng if then cũng làm được.

812
00:36:33,100 --> 00:36:34,650
Có rất nhiều cách làm bài này.

813
00:36:34,650 --> 00:36:36,840
Các bạn hãy chọn một cách và làm.

814
00:36:36,840 --> 00:36:39,630
Tiếp theo, tôi muốn các bạn

815
00:36:39,630 --> 00:36:43,810
viết lại chương trình này

816
00:36:43,810 --> 00:36:48,730
cho một bài tập khác ở chương này,

817
00:36:48,730 --> 00:36:53,500
rồi nhập dữ liệu đầu vào không phải dạng số

818
00:36:53,500 --> 00:36:54,470
để chương trình bị lỗi.

819
00:36:54,470 --> 00:36:59,900
Ví dụ người dùng nhập nine (chín), hãy báo lỗi.

820
00:36:59,900 --> 00:37:02,490
Hoặc nếu họ nhập như thế này, báo lỗi.

821
00:37:02,490 --> 00:37:07,100
Các bạn lưu ý đừng viết vòng lặp.

822
00:37:07,100 --> 00:37:09,160
Đây là một lần chạy chương trình.

823
00:37:09,160 --> 00:37:11,107
Đây là một lần chạy khác.

824
00:37:11,107 --> 00:37:12,190
Ta có thể viết vòng lặp sau.

825
00:37:12,190 --> 00:37:13,648
Ta còn chưa học về vòng lặp mà.

826
00:37:13,648 --> 00:37:15,220
Ở đây là hai lần chạy chương trình.

827
00:37:15,220 --> 00:37:17,700
Tôi chỉ muốn các bạn thoát chương trình.

828
00:37:17,700 --> 00:37:20,240
Hãy xem cách thoát ra trong giáo trình.

829
00:37:20,240 --> 00:37:22,750
Tôi không muốn các bạn thử

830
00:37:22,750 --> 00:37:25,810
yêu cầu nhập liệu đến khi nhận được dạng đúng.

831
00:37:25,810 --> 00:37:26,880
Ta sẽ làm phần đó sau.

832
00:37:26,880 --> 00:37:30,060
Tôi chỉ cần các bạn đọc một dữ liệu.

833
00:37:30,060 --> 00:37:34,827
Dùng lệnh try để chuyển sang số thực xem có được không.

834
00:37:34,827 --> 00:37:36,160
Nếu không được thì bỏ.

835
00:37:36,160 --> 00:37:40,410
Đừng cố tỏ ra khôn lanh mà nhắc lại nhiều lần.

836
00:37:40,410 --> 00:37:42,230
Vậy đừng lặp lại yêu cầu.

837
00:37:42,230 --> 00:37:47,676
Chỉ yêu cầu một lần rồi dừng.

838
00:37:47,676 --> 00:37:50,750

839
00:37:50,750 --> 00:37:55,800
Vậy đó là thực thi có điều kiện if, if then else,

840
00:37:55,800 --> 00:37:58,340
và tôi cũng đã giảng thêm về

841
00:37:58,340 --> 00:37:59,780
try và except.

842
00:37:59,780 --> 00:38:04,230
Cấu trúc try/except thực ra khá là hạn chế.

843
00:38:04,230 --> 00:38:07,130
Nó chỉ dùng để xử lý các lỗi mà

844
00:38:07,130 --> 00:38:08,720
bạn đoán trước được thôi.

845
00:38:08,720 --> 00:38:10,180
Và bạn có thể hình dung trong trường hợp lỗi

846
00:38:10,180 --> 00:38:14,770
thì mình muốn thay thế như thế nào.

847
00:38:14,770 --> 00:38:16,620
Hẹn gặp lại các bạn trong bài giảng sau.

