96
00:04:30,280 --> 00:04:31,540
mhthanh
dùng nó sẽ làm Python thấy khó hiểu

97
00:04:31,540 --> 00:04:35,180

98
00:04:35,180 --> 00:04:37,940
và sẽ không biết ta thật sự muốn gì ở đó

99
00:04:37,940 --> 00:04:41,060
vậy nên đó sẽ là một lỗi cú pháp

100
00:04:41,060 --> 00:04:44,090
Vì Python phân biệt chữ viết hoa và viết thường

101
00:04:44,090 --> 00:04:46,260
nên "spam"

102
00:04:46,260 --> 00:04:49,730
thì khác với "Spam" và cũng khác với "SPAM"

103
00:04:49,730 --> 00:04:55,120
Đây là 3 biến khác nhau

104
00:04:55,120 --> 00:04:57,080
Hầu hết mọi người không dùng các tên biến

105
00:04:57,080 --> 00:04:58,560
mà có thể gây hiểu nhầm

106
00:04:58,560 --> 00:05:01,740
Cho nên nếu bạn dùng các tên này và ai đó

107
00:05:01,740 --> 00:05:04,530
đọc chúng, tất cả đều thấy 3 cái tên biến này

108
00:05:04,530 --> 00:05:06,400
rất khó hiểu

109
00:05:06,400 --> 00:05:08,100
Đặt tên nhiều biến giống nhau vậy là một ý tưởng tồi

110
00:05:08,100 --> 00:05:08,990
Đừng làm thế

111
00:05:08,990 --> 00:05:10,930
Tôi chỉ đang cho bạn xem một ví dụ

112
00:05:10,930 --> 00:05:14,940
Rằng viết hoa hay viết thường có thể tạo thành tên biến khác

113
00:05:14,940 --> 00:05:18,190
Nhắc lại, biến đại diện cho một nơi trong bộ nhớ

114
00:05:18,190 --> 00:05:22,530
mà ta sẽ lưu trữ và truy xuất thông tin

115
00:05:22,530 --> 00:05:24,730
có thể là số, chuỗi ký tự, v.v.

116
00:05:24,730 --> 00:05:27,030
Đây là những thứ ta điều khiển

117
00:05:27,030 --> 00:05:29,990
Python cũng có một tập các từ dành riêng

118
00:05:29,990 --> 00:05:33,070
Nghĩa là bạn không thể dùng những từ này làm tên biến

119
00:05:33,070 --> 00:05:36,020
Những từ này có ý nghĩa rất đặc biệt

120
00:05:36,020 --> 00:05:40,530
and, for, is, raise, if

121
00:05:40,530 --> 00:05:42,280
Bạn không thể đặt tên biến là "if"

122
00:05:42,280 --> 00:05:43,620
Ồ không

123
00:05:43,620 --> 00:05:44,741
Đó là "if"

124
00:05:44,741 --> 00:05:45,490
Tôi biết "if" có nghĩa gì

125
00:05:45,490 --> 00:05:49,300
Đây là những từ nằm trong bộ từ ngữ cốt lõi của Python

126
00:05:49,300 --> 00:05:52,620
bạn không được dùng cho mục đích khác

127
00:05:52,620 --> 00:05:55,600
như là đặt tên biến hay tên hàm

128
00:05:55,600 --> 00:05:58,870
Vậy đó là bộ từ ngữ, hằng số,

129
00:05:58,870 --> 00:06:03,000
biến số, và các từ dành riêng

130
00:06:03,000 --> 00:06:06,020
Bây giờ ta dùng chúng, kết hợp chúng

131
00:06:06,020 --> 00:06:09,060
thành các câu lệnh trong Python

132
00:06:09,060 --> 00:06:10,590
mà có chức năng làm việc gì đó

133
00:06:10,590 --> 00:06:13,250
Ta đã nói về câu lệnh gán

134
00:06:13,250 --> 00:06:15,210
Kiểu như có một mũi tên chỉ phương hướng ở đây

135
00:06:15,210 --> 00:06:18,230
Nó nói, này Python, tìm cho tôi một chỗ và đặt tên chỗ này là x

136
00:06:18,230 --> 00:06:21,370
Đặt vào chỗ đó số 2 để sau này dùng

137
00:06:21,370 --> 00:06:22,740
và tiếp tục

138
00:06:22,740 --> 00:06:25,570
Theo mũi tên, phần bên phải của câu lệnh

139
00:06:25,570 --> 00:06:26,980
được thực hiện trước

140
00:06:26,980 --> 00:06:32,159
Tạm thời bạn có thể bỏ qua phần bên trái

141
00:06:32,159 --> 00:06:33,700
Phần bên phải được tính toán

142
00:06:33,700 --> 00:06:37,560
bằng cách lấy giá trị hiện tại của x, là 2

143
00:06:37,560 --> 00:06:40,590
cộng 2 giá trị này với nhau, ra 4

144
00:06:40,590 --> 00:06:46,290
Khi đã biết số này là 4

145
00:06:46,290 --> 00:06:48,720
Python lưu lại số này vào biến x

146
00:06:48,720 --> 00:06:52,910
Sau đó ta gọi lệnh in giá trị của x và nhận được số 4

147
00:06:52,910 --> 00:06:55,410
Đây là một chuỗi tuần tự các bước

148
00:06:55,410 --> 00:06:59,669
Biến x thay đổi sau khi các bước được thực hiện

149
00:06:59,669 --> 00:07:01,460
Ta nói "print x" thì nghĩa là

150
00:07:01,460 --> 00:07:03,680
in giá trị hiện tại của x

151
00:07:03,680 --> 00:07:07,660

152
00:07:07,660 --> 00:07:11,140
Ta có thể dùng nhiều toán tử khác nhau

153
00:07:11,140 --> 00:07:12,610
và nhiều câu lệnh gán khác nhau

154
00:07:12,610 --> 00:07:15,970
Ta tính phần bên tay phải

155
00:07:15,970 --> 00:07:18,860
Biểu thức này được tính toán

156
00:07:18,860 --> 00:07:20,560
dựa trên giá trị hiện tại của x

157
00:07:20,560 --> 00:07:21,860
Nó tính chỗ này

158
00:07:21,860 --> 00:07:24,230
Và khi biết câu trả lời

159
00:07:24,230 --> 00:07:26,340
thì gán kết quả vào biến

160
00:07:26,340 --> 00:07:30,840
ở bên tay trái của câu lệnh gán

161
00:07:30,840 --> 00:07:34,627
Nhắc lại, tính xong hết phần bên tay phải, sau đó chuyển

162
00:07:34,627 --> 00:07:35,800
kết quả sang bên tay trái

163
00:07:35,800 --> 00:07:39,630
Một số ngôn ngữ cũ thật ra không dùng dấu bằng

164
00:07:39,630 --> 00:07:41,290
cho toán tử gán

165
00:07:41,290 --> 00:07:43,720
Toán tử gán này

166
00:07:43,720 --> 00:07:49,380
một số ngôn ngữ cũ thật sự là

167
00:07:49,380 --> 00:07:50,760
dùng mũi tên

168
00:07:50,760 --> 00:07:53,610
Ký tự mũi tên không thật sự có trên bàn phím

169
00:07:53,610 --> 00:07:56,810
Một ngôn ngữ khác sử dụng dấu := 

170
00:07:56,810 --> 00:07:57,310
cho toán tử gán

171
00:07:57,310 --> 00:07:58,890
Nhưng chúng ta dùng dấu =

172
00:07:58,890 --> 00:08:00,340
Nếu bạn quen thuộc với Toán học

173
00:08:00,340 --> 00:08:05,930
Chỗ này có thể hơi khó hiểu, ví dụ như x = 1 và sau đó x = 2

174
00:08:05,930 --> 00:08:07,880
Trên phương diện Toán học thì chỗ đó sai

175
00:08:07,880 --> 00:08:11,710
Vì x chỉ có thể có 1 giá trị

176
00:08:11,710 --> 00:08:14,300
Nhưng trên phương diện lập trình, nếu đây là 2 câu lệnh

177
00:08:14,300 --> 00:08:16,710
thì nó có nghĩa là x nhận 1 giá trị, và sau đó

178
00:08:16,710 --> 00:08:19,430
giá trị của x thay đổi

179
00:08:19,430 --> 00:08:20,580
OK

180
00:08:20,580 --> 00:08:22,350
Tôi sẽ đi lướt qua chỗ này

181
00:08:22,350 --> 00:08:24,720
Vì ta tính toán từ phía tay phải

182
00:08:24,720 --> 00:08:27,090
sang phía tay trái, trong câu lệnh gán

183
00:08:27,090 --> 00:08:29,700
Nó lấy ra giá trị của x

184
00:08:29,700 --> 00:08:31,750
x mang giá trị 0.6

185
00:08:31,750 --> 00:08:34,440
Nó lấy giá trị ra

186
00:08:34,440 --> 00:08:36,250
bỏ qua phần bên này

187
00:08:36,250 --> 00:08:39,250
Cố gắng tính kết quả cho biểu thức này

188
00:08:39,250 --> 00:08:41,690
Có phép nhân, dấu ngoặc, v.v.

189
00:08:41,690 --> 00:08:42,520
như vậy

190
00:08:42,520 --> 00:08:46,500
Cơ bản là nó lấy giá trị 0.6 đưa vào trong phép tính

