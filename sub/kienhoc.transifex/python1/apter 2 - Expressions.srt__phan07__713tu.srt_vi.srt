571
00:25:39,210 --> 00:25:42,850
mhthanh
Python nhìn chỗ này và biết đó là một số thực

572
00:25:42,850 --> 00:25:44,910
và chỗ này là một số nguyên

573
00:25:44,910 --> 00:25:47,530
Điều đó có nghĩa kết quả là một số thực

574
00:25:47,530 --> 00:25:49,370
Phép chia được thực hiện với số thực

575
00:25:49,370 --> 00:25:57,084
Ta phải chuyển số nguyên 99 sang số thực 99.0

576
00:25:57,084 --> 00:25:59,500
Ta thậm chí có thể làm điều này với biến

577
00:25:59,500 --> 00:26:01,330
Đặt số 42 vào biến i

578
00:26:01,330 --> 00:26:02,820
i có kiểu số nguyên

579
00:26:02,820 --> 00:26:07,430
Sau đó ta nói, chuyển kiểu dữ liệu của i thành số thực

580
00:26:07,430 --> 00:26:09,740
và lưu vào biến f

581
00:26:09,740 --> 00:26:12,070
Ta có thể in nó

582
00:26:12,070 --> 00:26:15,060
Giờ nó là 42.0 thay vì 42

583
00:26:15,060 --> 00:26:16,450
Chúng không giống nhau

584
00:26:16,450 --> 00:26:17,760
Chúng đều có giá trị 42

585
00:26:17,760 --> 00:26:21,785
Nhưng một cái là số thực dấu chấm động 42.0,
và cái kia là số nguyên 42

586
00:26:21,785 --> 00:26:24,054
Ta có thể hỏi,
và nó là một số thực

587
00:26:24,054 --> 00:26:25,470
Bạn có thể làm điều tương tự

588
00:26:25,470 --> 00:26:27,500
ở giữa một phép tính

589
00:26:27,500 --> 00:26:30,530
1 + 2 * float(3)

590
00:26:30,530 --> 00:26:32,420
Hàm ép kiểu số thực này được thực hiện nhanh chóng

591
00:26:32,420 --> 00:26:38,360
Điều đầu tiên xảy ra,
đây là 1 + 2 * 3.0

592
00:26:38,360 --> 00:26:41,680
/ 4 - 5

593
00:26:41,680 --> 00:26:44,290
Điều đầu tiên xảy ra là hàm ép kiểu float này được thực hiện

594
00:26:44,290 --> 00:26:46,123
có dấu ngoặc nên được ưu tiên

595
00:26:46,123 --> 00:26:47,950
Đây là một hàm có sẵn

596
00:26:47,950 --> 00:26:50,510
tên là "float", nhận vào đối số

597
00:26:50,510 --> 00:26:53,560
là một số không phải số thực
và trả lại cho bạn

598
00:26:53,560 --> 00:26:55,390
một số thực

599
00:26:55,390 --> 00:26:57,440
Ta sẽ nói nhiều hơn về các hàm trong chương 4

600
00:26:57,440 --> 00:27:01,240

601
00:27:01,240 --> 00:27:04,190
Bạn cũng có thể chuyển đổi giữa kiểu chuỗi và kiểu số

602
00:27:04,190 --> 00:27:10,210
Nếu bạn nhớ, ta từng có ví dụ nhận vào một chuỗi

603
00:27:10,210 --> 00:27:12,570
Chỗ này, tôi bối rối một chút

604
00:27:12,570 --> 00:27:16,700
vì tôi đang tạo một chuỗi với các ký tự 1, 2, 3

605
00:27:16,700 --> 00:27:19,330
Nó không phải là số 123

606
00:27:19,330 --> 00:27:23,360
Đây là một chuỗi có 3 ký tự 1, 2, 3 bên trong

607
00:27:23,360 --> 00:27:25,660
Tôi có thể hỏi bên trong nó là gì

608
00:27:25,660 --> 00:27:27,480
và nó trả lời là có một chuỗi bên trong

609
00:27:27,480 --> 00:27:28,780
Tôi biết điều đó

610
00:27:28,780 --> 00:27:30,500
Tôi thử cộng 1 vào nó

611
00:27:30,500 --> 00:27:33,760
Có vẻ tự nhiên là "123" + 1

612
00:27:33,760 --> 00:27:36,740
sẽ là 124

613
00:27:36,740 --> 00:27:38,320
Nhưng không phải

614
00:27:38,320 --> 00:27:40,575
Python nhìn vào phép cộng và nói

615
00:27:40,575 --> 00:27:41,950
có một chuỗi ở phía bên kia

616
00:27:41,950 --> 00:27:43,460
và một số nguyên ở phía bên này

617
00:27:43,460 --> 00:27:46,340
Tôi sẽ sợ hãi và bảo rằng bạn không thể

618
00:27:46,340 --> 00:27:49,910
ghép nối một chuỗi và một số nguyên

619
00:27:49,910 --> 00:27:51,940
nhưng mà có một hàm tên là "int"

620
00:27:51,940 --> 00:27:54,380
có thể chuyển nhiều thứ khác nhau

621
00:27:54,380 --> 00:27:55,500
bao gồm cả chuỗi ký tự, sang số nguyên

622
00:27:55,500 --> 00:28:00,280
Ta có thể đưa chuỗi kia vào làm tham số đầu vào của hàm int

623
00:28:00,280 --> 00:28:02,420
Sau đó hàm này chuyển chuỗi thành số nguyên

624
00:28:02,420 --> 00:28:05,450
Đưa kết quả vào biến ival

625
00:28:05,450 --> 00:28:06,990
Ta có thể hỏi kiểu dữ liệu của nó là gì

626
00:28:06,990 --> 00:28:09,820
Nó là một số nguyên

627
00:28:09,820 --> 00:28:13,250
Giờ ta có thể dùng nó trong một biểu thức, 
print ival + 1

628
00:28:13,250 --> 00:28:16,300
Python nhìn vào cả 2 bên, thấy một số nguyên

629
00:28:16,300 --> 00:28:19,270
thấy 1 số nguyên, và kết quả là 124

630
00:28:19,270 --> 00:28:21,120
Được rồi

631
00:28:21,120 --> 00:28:24,730
Giờ nếu tôi tạo 1 biến mới và gán cho nó giá trị "hello bob"

632
00:28:24,730 --> 00:28:28,650
và nói, hãy chuyển "hello bob" thành số nguyên

633
00:28:28,650 --> 00:28:31,350
bạn có thể dự đoán, nó không làm được

634
00:28:31,350 --> 00:28:36,010
Nó nói, các chữ đó không hợp lệ để chuyển thành số nguyên

635
00:28:36,010 --> 00:28:40,010
Các thông báo lỗi này

636
00:28:40,010 --> 00:28:43,660
một khi bạn quen với những từ ngữ khó nghe của chúng

637
00:28:43,660 --> 00:28:46,020
chúng không chỉ nói sorry

638
00:28:46,020 --> 00:28:48,020
Chúng cố nói cho bạn biết điều gì đang xảy ra

639
00:28:48,020 --> 00:28:52,440
Không thể ghép nối chuỗi và số nguyên,
chữ không hợp lệ

640
00:28:52,440 --> 00:28:52,940
để chuyển thành số nguyên

641
00:28:52,940 --> 00:28:56,310
Nó đang cố gắng tỏ ra hữu ích nhất có thể để cho bạn

642
00:28:56,310 --> 00:28:57,760
một manh mối rằng cần sửa cái gì

643
00:28:57,760 --> 00:29:02,040
Không phải là trách mắng

644
00:29:02,040 --> 00:29:02,950
OK

645
00:29:02,950 --> 00:29:05,720
Ta đã nói về biến, kiểu dữ liệu, và chuyển đổi kiểu dữ liệu
(còn gọi là ép kiểu dữ liệu)

646
00:29:05,720 --> 00:29:09,350
Giờ ta sẽ nói một chút về việc nhập dữ liệu

647
00:29:09,350 --> 00:29:12,830
Có một hàm có sẵn

648
00:29:12,830 --> 00:29:15,350
trong Python, tên là raw_input

649
00:29:15,350 --> 00:29:20,090
Khi raw_input chạy

650
00:29:20,090 --> 00:29:23,030
nó có một dấu nhắc

651
00:29:23,030 --> 00:29:25,290
hiện lên trên màn hình

652
00:29:25,290 --> 00:29:26,990
Nó hỏi "Who are you?"

653
00:29:26,990 --> 00:29:29,685
rồi đợi

654
00:29:29,685 --> 00:29:31,970
Nó ngồi đó và đợi

655
00:29:31,970 --> 00:29:34,500
Nó hỏi, tiếp theo là gì?

656
00:29:34,500 --> 00:29:37,400
Rồi bạn gõ vào một chuỗi ký tự

657
00:29:37,400 --> 00:29:38,730
Nhấn phím Enter

658
00:29:38,730 --> 00:29:41,640

659
00:29:41,640 --> 00:29:48,480
Bất cứ thứ gì bạn gõ ở đây đều được đưa vào một biến

660
00:29:48,480 --> 00:29:51,010
và nó là 1 chuỗi ký tự

661
00:29:51,010 --> 00:29:53,800
Bạn có thể dùng nó

662
00:29:53,800 --> 00:29:56,670
Tôi in ra "welcome",

663
00:29:56,670 --> 00:29:58,720
nghĩa là tôi đang in ra 2 thứ

664
00:29:58,720 --> 00:30:00,779
Dấu phẩy, kèm một khoảng trống, 
vào sau chữ welcome

665
00:30:00,779 --> 00:30:01,320
và biến "nam"

