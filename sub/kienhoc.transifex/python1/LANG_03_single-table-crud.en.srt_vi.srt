1
00:00:08,360 --> 00:00:10,696
wermarter 25/07/16
Bây giờ, ta sẽ đi vào phần
trọng tâm của vấn đề.

2
00:00:10,696 --> 00:00:14,790
Ta sẽ viết hẳn hoi một vài đoạn SQL
và lập nên một cơ sở dữ liệu.

3
00:00:14,790 --> 00:00:16,840
Tôi hi vọng đến giờ

4
00:00:16,840 --> 00:00:22,020
các bạn đã cài đặt trình duyệt SQLite,
nếu chưa, tôi đề nghị bạn cài đặt ngay.

5
00:00:22,020 --> 00:00:24,510
Hoặc bạn có thể chọn plugin trên Firefox

6
00:00:24,510 --> 00:00:27,170
để thực hiện thao tác với
cơ sở dữ liệu SQLite.

7
00:00:27,170 --> 00:00:30,330
Tôi đã dùng nó khi trình duyệt SQLite
chưa ra phiên bản mới nhất.

8
00:00:30,330 --> 00:00:33,340
Tuy nhiên, những điều tôi dạy bạn
có thể áp dụng cho mọi trường hợp trên.

9
00:00:33,340 --> 00:00:36,490
Ngoài ra, bạn cũng có thể download
và sử dụng các công cụ quản lí SQLite

10
00:00:36,490 --> 00:00:40,400
như MAMP hoặc XAMPP.

11
00:00:40,400 --> 00:00:41,220
Do đó, ta không quan trọng
về phần mềm được sử dụng.

12
00:00:41,220 --> 00:00:44,240
Một cách đơn giản, ta cần một
phần mềm cho phép nhập vào SQL,

13
00:00:44,240 --> 00:00:47,850
và khi ta nhấn nút, nó sẽ gửi đến
cơ sở dữ liệu và đưa ra phản hồi.

14
00:00:47,850 --> 00:00:49,780
OK.

15
00:00:49,780 --> 00:00:53,010
Và đây là giao diện của
trình duyệt SQLite.

16
00:00:53,010 --> 00:00:54,620
Đợi một chút, tôi sẽ mở
trình duyệt này lên.

17
00:00:56,670 --> 00:00:58,870
SQLite browser.

18
00:00:59,940 --> 00:01:01,550
Và đây là trình duyệt cơ sở dữ liệu
cho SQLite..

19
00:01:03,180 --> 00:01:07,962
Về cơ bản, chương trình sẽ
đọc thông tin từ một file và ghi thông tin lên nó.

20
00:01:07,962 --> 00:01:12,462
File mà chương trình đọc và ghi
được lưu trong định dạng chuyên dụng

21
00:01:12,462 --> 00:01:17,720
để thao tác trên thông tinh
nhanh nhất có thể.

22
00:01:17,720 --> 00:01:22,058
Ban đầu, ta chọn New Database

23
00:01:22,058 --> 00:01:26,270
và tôi sẽ cho nó một vị trí trên đĩa.

24
00:01:26,270 --> 00:01:30,500
trong thư mục Desktop\py4e\databases\

25
00:01:31,540 --> 00:01:35,930
và gọi nó là sql1.

26
00:01:37,450 --> 00:01:38,890
và đó chính là tên của cơ sở dữ liệu

27
00:01:38,890 --> 00:01:40,630
Tiếp theo, chương trình sẽ ghi vào 
một file trên đĩa.

28
00:01:40,630 --> 00:01:46,230
Bạn chỉ đọc được file này với thư viện SQLite,
những chương trình khác sẽ không đọc được.

29
00:01:46,230 --> 00:01:51,990
Ta có thể thấy tên file không hay,
nhưng ta sẽ lưu nó lại. Xong.

30
00:01:51,990 --> 00:01:54,310
Chương trình gợi ý chúng ta
cách tạo một bảng mới.

31
00:01:54,310 --> 00:01:55,900
Nhưng ta sẽ không sử dụng nó.

32
00:01:55,900 --> 00:01:59,080
Vì thế, ta không có bảng, chỉ số,
khung nhìn hay trigger nào hết.

33
00:01:59,080 --> 00:02:01,990
Và ta đã có chỗ để nhập
đoạn lệnh cho SQL.

34
00:02:01,990 --> 00:02:04,920
Nếu là người  quản lí cơ sở dữ liệu,

35
00:02:04,920 --> 00:02:10,120
tất cả những việc bạn thực sự làm là 
đọc và ghi dữ liệu cho file sql1 kia.

36
00:02:10,120 --> 00:02:14,290
Nhưng bạn không viết code tương tác
trực tiếp đến file đó,

37
00:02:14,290 --> 00:02:17,940
Thay vào đó, bạn sẽ sử dụng thư viện SQL.

38
00:02:17,940 --> 00:02:21,840
Bây giờ ta sẽ tạo ra một bảng.

39
00:02:21,840 --> 00:02:24,150
Cũng là cơ sở dữ liệu SQL đầu tiên của ta.

40
00:02:24,150 --> 00:02:28,080
Với cú pháp CREATE TABLE và 
sau đó là tên bảng: Users.

41
00:02:28,080 --> 00:02:29,370
Ở đây, tôi sẽ sử dụng chữ in hoa.

42
00:02:29,370 --> 00:02:30,860
Việc phân biệt chữ in hoa và chữ in thường
là cả một vấn đề trong việc lập trình.

43
00:02:30,860 --> 00:02:33,610
Và cũng có một vài trường hợp lạ
khi ta không phân biệt chữ in hoa và thường.

44
00:02:33,610 --> 00:02:36,550
Vì thế, ta cứ mặc định rằng
ở đây, ta phân biệt chữ in hoa và thường.

45
00:02:36,550 --> 00:02:39,180
Ta hoàn toàn có thể học được SQL
từ những đoãn lệnh như thế này.

46
00:02:39,180 --> 00:02:42,620
SQL được thiết kế 
theo kiểu hội thoại, 

47
00:02:42,620 --> 00:02:48,820
Do đó, cụm từ CREATE TABLE

48
00:02:48,820 --> 00:02:52,230
thực chất là MỘT từ khoá,
với nghĩa là tạo ra bảng.

49
00:02:52,230 --> 00:02:57,130
Và tên của đối tượng này và 
một danh sách các trường

50
00:02:57,130 --> 00:02:59,620
và kiểu của nó,  đây là
tất cả những gì ta đang làm.

51
00:02:59,620 --> 00:03:04,160
Tạo ra bảng có tên Users gồm 2 cột,

52
00:03:04,160 --> 00:03:08,845
cột "name" với miền mỗi giá trị tối đa là 128 kí tự,

53
00:03:08,845 --> 00:03:13,090
cột "email" với miền mỗi giá trị tối đa là 128 kí tự.

54
00:03:13,090 --> 00:03:16,400
Đây là cấu trúc của cơ sở dữ liệu của ta,
là quy ước chung khi thao tác.

55
00:03:16,400 --> 00:03:18,960
Ở trong bảng này, ta chỉ có 2 cột,

56
00:03:18,960 --> 00:03:21,240
Ta không thể đặt vào đây 
một dữ liệu về "age" được.

57
00:03:21,240 --> 00:03:26,210
hay "favourite beverage" vào bảng

58
00:03:26,210 --> 00:03:29,610
cũng như không thể đặt
một chuỗi 129 kí tự vào cột

59
00:03:29,610 --> 00:03:33,980
trong khi hoàn toàn có thể
đặt 0, 1, 2, 127 hoặc 128

60
00:03:33,980 --> 00:03:37,970
nhưng 129 thì không thể.

61
00:03:37,970 --> 00:03:39,278
Vì đây là một qui ước chung.

62
00:03:39,278 --> 00:03:45,110
Đối với cơ sở dữ liệu, khi đặt
vào nhiều hơn 128 kí tự, nó sẽ "no no no..."

63
00:03:45,110 --> 00:03:49,170
Nếu muốn đặt vào 1024 kí tự thì
quy ước chung phải là 1024.

64
00:03:49,170 --> 00:03:53,630
Và khi đặt vào 1025 kí tự,
cơ sở dữ liệu sẽ "cắn" ta.

65
00:03:53,630 --> 00:03:57,510
Tại sao vậy, tại sao cơ sở dữ liệu
lại ám ảnh về nó như vậy?

66
00:03:57,510 --> 00:04:01,050
Câu trả lời nằm trong cấu trúc
của dữ liệu trên đĩa,

67
00:04:01,050 --> 00:04:03,020
để việc truy xuất thông tin nhanh,

68
00:04:03,020 --> 00:04:07,070
việc biết trước được kích thước
tối đa của dữ liệu là rất cần thiết.

69
00:04:07,070 --> 00:04:12,480
Trong bản qui ước, việc đặt
giới hạn trên của dữ liệu là 4 hay 4MB

70
00:04:12,480 --> 00:04:16,000
sẽ làm thay đổi hoàn toàn
cấu trúc của dữ liệu trên đĩa.

71
00:04:16,000 --> 00:04:17,500
Rất may, ta không cần phải
tìm hiểu về nó.

72
00:04:17,500 --> 00:04:22,130
Điều bạn cần làm là thiết lập
một bản qui ước chính xác. Ok?

73
00:04:22,130 --> 00:04:25,160
Đây cũng là một phần của 
mô hình dữ liệu

74
00:04:25,160 --> 00:04:28,570
Định hình trước kiểu dữ liệu
ta sẽ dùng và ta dùng nó như thế nào,

75
00:04:28,570 --> 00:04:33,100
và cuối cùng là truyền đạt điều đó cho SQL.

76
00:04:33,100 --> 00:04:36,500
Sau đó, bạn không cần phải quan tâm đến
phép thuật đằng sau nó để truy xuất dữ liệu nhanh.

77
00:04:36,500 --> 00:04:39,120
Qui ước bạn lập cho dữ liệu của mình
sẽ làm cho việc truy xuất dữ liệu rất nhanh.

78
00:04:39,120 --> 00:04:42,550
Và sự rõ ràng của dữ liệu chính là

79
00:04:43,820 --> 00:04:48,800
chìa khoá cho những phép thuật đó.

80
00:04:48,800 --> 00:04:52,320
Trở lại với cửa sổ giao diện SQL,

81
00:04:52,320 --> 00:04:54,490
tôi đã paste đoạn lệnh CREATE TABLE trên vào.

82
00:04:56,160 --> 00:05:00,060
Giao diện của mỗi chương trình khác nhau
sẽ khác nhau

83
00:05:00,060 --> 00:05:01,636
nhưng chúng luôn có điểm chung là
một cửa sổ giao diện SQL.

84
00:05:01,636 --> 00:05:05,960
Việc bạn cần làm là đưa cơ sở dữ liệu
vào trong đó và nhấn nút lệnh thực hiện (execute)

85
00:05:05,960 --> 00:05:09,330
nút lệnh của bạn có thể có hình dạng khác,

86
00:05:09,330 --> 00:05:11,430
nhưng đều có miêu tả là thực hiện (execute).

87
00:05:14,000 --> 00:05:18,150
Dưới đây chương trình thông báo
đoạn lệnh đã thực thi thành công.

88
00:05:18,150 --> 00:05:19,200
CREATE TABLE,...

89
00:05:19,200 --> 00:05:24,810
Nếu nhìn lại dữ liệu, bạn sẽ thấy
ta đã có một bảng dữ liệu

90
00:05:24,810 --> 00:05:27,800
và bảng này tên là Users với cột
"name" và "email".

91
00:05:27,800 --> 00:05:31,720
Và nếu kéo tab này qua, ta sẽ thấy
VARCHAR là 128.

92
00:05:31,720 --> 00:05:35,560
Ta có thể thấy cơ sở dữ liệu đã
hiểu được các qui ước chung đã đặt ra.

93
00:05:35,560 --> 00:05:38,120
Đây cũng chính là câu lệnh SQL đầu tiên của ta.

94
00:05:38,120 --> 00:05:42,120
Đối với câu lệnh SQL kế, bạn nên

95
00:05:44,430 --> 00:05:48,260
copy từ slide và paste xuống cửa sổ câu lệnh.

96
00:05:48,260 --> 00:05:54,040
Bây giờ, ta sẽ đưa vào bảng đã tạo
một vài dữ liệu

97
00:05:54,040 --> 00:05:55,150
Bắt đầu nào!

98
00:05:57,280 --> 00:05:59,504
Nhấn nút New Record để nhập dữ liệu.

99
00:05:59,504 --> 00:06:04,384
Ví dụ như Chuck

100
00:06:04,384 --> 00:06:09,879
và email là csev@umich.edu

101
00:06:09,879 --> 00:06:13,087
Nhấn New Record một lần nữa.

102
00:06:13,087 --> 00:06:15,587
Tên là Colleen.

103
00:06:17,926 --> 00:06:23,360
và... vlt@umich.edu

104
00:06:23,360 --> 00:06:25,620
I want it so they sort right, edu.

105
00:06:28,790 --> 00:06:32,972
Một bản ghi khác ta nhập Sally

106
00:06:32,972 --> 00:06:36,851
sally@umich.edu.

107
00:06:38,290 --> 00:06:40,740
Vào một bản khác là Fred

108
00:06:40,740 --> 00:06:42,135
Và tôi không biết anh ta

109
00:06:42,135 --> 00:06:46,061
fred@umich.edu.

110
00:06:46,061 --> 00:06:50,960
Những việc ta làm nãy giờ 
thực chất là lệnh cho SQL,

111
00:06:50,960 --> 00:06:53,160
Hoàn tất việc nhập.

112
00:06:53,160 --> 00:06:55,860
Nếu nhìn vào cửa sổ SQL log,

113
00:06:55,860 --> 00:06:58,790
bạn sẽ thấy tất cả những gì
đang diễn ra với SQL.

114
00:06:58,790 --> 00:07:01,340
Những câu lệnh như INSERT, 
hiện tại ta sẽ không để tâm đến chúng.

115
00:07:01,340 --> 00:07:02,340
Ta cứ cất nó đi

116
00:07:04,190 --> 00:07:07,300
Nhưng bạn nhớ rằng đó
chính là những điều đang diễn ra

117
00:07:07,300 --> 00:07:10,530
Vậy ta đã tạo ra một bảng có 
2 cột và 4 dòng.

118
00:07:14,300 --> 00:07:16,670
Và giờ ta sẽ học cách lệnh SQL

119
00:07:16,670 --> 00:07:19,700
cho việc chèn, xoá

120
00:07:19,700 --> 00:07:21,180
và truy xuất thông tin.

121
00:07:21,180 --> 00:07:23,560
Đầu tiên, ta sẽ học về cách
chèn dữ liệu vào bảng.

122
00:07:23,560 --> 00:07:27,590
Đây là đoạn SQL ta sẽ viết vào
giao diện trên chương trình.

123
00:07:27,590 --> 00:07:30,830
Đây là ví dụ mẫu về việc chèn
dữ liệu vào bảng.

124
00:07:30,830 --> 00:07:32,950
với từ khoá là INSERT INTO.

125
00:07:32,950 --> 00:07:37,060
sau đó là tên của bảng cùng
danh sách các cột đặt trong ngoặc

126
00:07:37,060 --> 00:07:40,290
và từ VALUES, một phần của SQL.

127
00:07:40,290 --> 00:07:43,710
và danh sách các dữ liệu chèn
vào tương ứng từng cột.

128
00:07:43,710 --> 00:07:48,950
Ta có Kristin là "name" và 
kf@umich.edu là "email" tương ứng.

129
00:07:48,950 --> 00:07:54,279
Và vậy là ta biết cách chèn dữ liệu 
vào bảng Users trong SQL.

130
00:07:56,330 --> 00:08:00,530
Gian lận một chút, hãy copy đoạn này

131
00:08:00,530 --> 00:08:06,220
vào đưa nó vào trình duyệt SQLite 
vào mục Execute SQL,

132
00:08:06,220 --> 00:08:09,210
xoá phần CREATE TABLE cũ đi,

133
00:08:09,210 --> 00:08:12,380
và nhập vào đoạn SQL.

134
00:08:12,380 --> 00:08:16,080
Chương trình sẽ tự động tô màu 
các phần của cú pháp nhập vào, rất hữu ích.

135
00:08:16,080 --> 00:08:17,750
Và đoạn lệnh sẽ thực hiện thành công.

136
00:08:17,750 --> 00:08:19,810
Giả sử tôi mắc phải lỗi,

137
00:08:19,810 --> 00:08:23,920
ví dụ như ZAP thay cho VALUES.

138
00:08:23,920 --> 00:08:27,740
Khi đó, chương trình sẽ báo lỗi cú pháp

139
00:08:27,740 --> 00:08:31,080
và bạn sẽ sửa nó lại thành VALUES.

140
00:08:32,960 --> 00:08:35,730
Rất hữu ích phải không?

141
00:08:35,730 --> 00:08:38,790
và Xong!

142
00:08:38,790 --> 00:08:40,930
Trở lại với phần cấu trúc dữ liệu,

143
00:08:40,930 --> 00:08:43,790
Duyệt qua các dữ liệu
và ta sẽ thấy xuất hiện Kristin.

144
00:08:43,790 --> 00:08:45,930
lệnh INSERT thực hiện tạo
thêm một dòng nữa.

145
00:08:47,780 --> 00:08:49,790
Đơn giản, phải không?

146
00:08:49,790 --> 00:08:51,070
vậy là ta đã có thể

147
00:08:52,220 --> 00:08:54,120
chèn thêm một hàng tên Kristin vào cột.

148
00:08:56,410 --> 00:08:57,230
Kế tiếp là xoá một dòng trong SQL.

149
00:08:58,950 --> 00:09:02,720
Với từ khoá DELETE FROM,

150
00:09:02,720 --> 00:09:04,450
bạn có thể xoá bảng Users.

151
00:09:04,450 --> 00:09:07,470
Nhưng thực ra nó không được dùng
để xoá toàn bộ thành phần trong đó.

152
00:09:07,470 --> 00:09:09,640
Ta dùng nó để xoá một thành phần xác định.

153
00:09:09,640 --> 00:09:12,820
Như tôi đã nói, từ khoá trong SQL
hơi bị dư thừa.

154
00:09:13,830 --> 00:09:17,660
Thực ra, từ khoá của SQL
cũng như từ ngữ bình thường. 

155
00:09:17,660 --> 00:09:19,400
DELETE FROM Users có nghĩa
XOÁ TỪ Users.

156
00:09:19,400 --> 00:09:20,480
Khá trực quan!

157
00:09:20,480 --> 00:09:22,130
Ta có DELETE FROM Users - 
tên của bảng đã tạo,

158
00:09:22,130 --> 00:09:23,170
và kèm theo một cấu trúc WHERE.

159
00:09:23,170 --> 00:09:26,860
Cấu trúc WHERE có thể đặt ở
nhiều câu lệnh trong SQL.

160
00:09:26,860 --> 00:09:31,450
Cấu trúc WHERE lệnh cho SQL không xoá tất cả các dòng 
mà chỉ xoá những trường hợp đúng với đưa ra.

161
00:09:31,450 --> 00:09:33,280
Trong trường hợp này là 
một câu hỏi logic.

162
00:09:33,280 --> 00:09:36,260
Nó giống như dấu (?) trong
câu lệnh điều kiện IF, đúng không?

163
00:09:36,260 --> 00:09:40,130
Xoá từ bảng Users các dòng
với email là ted@umich.edu.

164
00:09:40,130 --> 00:09:42,520
Nó có thể là một dòng hoặc

165
00:09:42,520 --> 00:09:45,430
cũng có thể là hàng trăm dòng
chứa email đưa ra.

166
00:09:47,100 --> 00:09:50,160
Thực ra, trường hợp ta có hàng
trăm dòng chứa email đó sẽ không hay.

167
00:09:50,160 --> 00:09:52,560
Nhưng không sao.

168
00:09:52,560 --> 00:09:56,220
Ta chỉ việc xoá từ bảng Users các dòng
với email là ted@umich.edu.

169
00:09:56,220 --> 00:09:58,504
Hãy cùng thực hiện nó nào.

170
00:10:00,220 --> 00:10:03,760
Tôi sẽ copy nó lại,

171
00:10:03,760 --> 00:10:06,150
trở lại cửa sổ trình duyệt SQLite.

172
00:10:06,150 --> 00:10:07,570
Ta có thể dùng nút Delete Record, nhưng

173
00:10:07,570 --> 00:10:09,840
trong trường hợp này, tôi đang
dạy bạn về ngôn ngữ SQL.

174
00:10:09,840 --> 00:10:11,420
Và đây là cách thực hiện nó.

175
00:10:11,420 --> 00:10:14,970
Ta sẽ xoá từ bảng Users các dòng
với email là ted@umich.edu.

176
00:10:14,970 --> 00:10:15,720
Nhấn nút thực hiện.

177
00:10:17,230 --> 00:10:19,370
Chương trình sẽ thông báo là
đoạn lệnh đã được thực hiện xong.

178
00:10:19,370 --> 00:10:21,010
Trở lại, quan sát vào dữ liệu.

179
00:10:22,060 --> 00:10:24,820
Nhưng không có email ted@umich.edu?

180
00:10:24,820 --> 00:10:26,530
Dó tôi sẽ chỉnh sửa lại một tí, 
thay vào đó là "Fred"

181
00:10:27,830 --> 00:10:31,480
Ta sẽ có fred@umich.edu.

182
00:10:31,480 --> 00:10:35,100
Vào cửa sổ Browse Data, ta thấy
Fred đã biến mất, vậy đã thành công.

183
00:10:35,100 --> 00:10:37,400
Có thể nói đây là sức mạnh của
"Copy and Paste".

184
00:10:37,400 --> 00:10:38,100
Vậy ta đã biết về DELETE.

185
00:10:39,150 --> 00:10:43,707
Câu lệnh UPDATE sẽ tìm tới
một hay nhiều ô nhất định trong bảng,

186
00:10:43,707 --> 00:10:49,200
hoặc kết hợp của nhiều cột và dòng.

187
00:10:49,200 --> 00:10:54,060
Ta có UPDATE, một từ khoá nữa của SQL,
Users, tên của bảng và SET,

188
00:10:54,060 --> 00:10:59,630
một từ khoá của SQL và tên cột cần tìm
và giá trị mới các ô tìm được.

189
00:11:02,320 --> 00:11:05,070
vế WHERE rất quan trọng vì nếu không có nó,

190
00:11:05,070 --> 00:11:09,320
câu lệnh này sẽ được thực hiện cho mọi dòng,
do đó WHERE giảm đi số dòng cần xoá.

191
00:11:09,320 --> 00:11:12,711
vế WHERE ở đây là WHERE email='csev@umich.edu',

192
00:11:12,711 --> 00:11:17,332
ra lệnh tìm kiếm những dòng 
với giá trị như trên

193
00:11:17,332 --> 00:11:20,550
và sửa tên trên cột tương ứng thành Charles.

194
00:11:20,550 --> 00:11:22,890
OK? Giá trị tương ứng ở cột "name"
sẽ là Charles.

195
00:11:24,830 --> 00:11:26,020
Tôi sẽ thực thi câu lệnh trên.

196
00:11:27,020 --> 00:11:29,420
Hi vọng đến thới điểm này, 
bạn vẫn thực hiện các thao tác của bạn.

197
00:11:29,420 --> 00:11:33,407
Vì đây là một trong những phần được giao của bạn,

198
00:11:33,407 --> 00:11:37,360
tạo ra một cơ sở dữ liệu
và thao tác với nó.

199
00:11:37,360 --> 00:11:38,240
Nhấn Execute.

200
00:11:38,240 --> 00:11:45,287
Và như dự đoán, quan sát dữ liệu 
trong bảng, bạn sẽ thấy nó đã thay đổi.

201
00:11:45,287 --> 00:11:46,289
Cho đến giờ, ta đã làm khá tốt.

202
00:11:46,289 --> 00:11:50,832
Bạn thấy tôi rất thích ngôn ngữ này.
Nó trực quan hơn Python rất nhiều.

203
00:11:50,832 --> 00:11:55,670
Nhưng tôi không có ý chỉ trích Python.

204
00:11:55,670 --> 00:11:57,570
Bạn cũng không nên ghét Python.

205
00:11:57,570 --> 00:11:59,960
Python mang đặc tính mạnh mẽ và linh hoạt.

206
00:11:59,960 --> 00:12:02,629
Còn ngôn ngữ này tuy mạnh mẽ
nhưng không được linh hoạt cho lắm.

207
00:12:04,440 --> 00:12:06,990
Ta đã thực hiện thao tác chèn,

208
00:12:06,990 --> 00:12:08,310
xoá,

209
00:12:08,310 --> 00:12:09,200
cập nhật các dữ liệu trong bảng.

210
00:12:09,200 --> 00:12:10,250
Và bây giờ, ta sẽ học cách đọc thông tin từ bảng.

211
00:12:11,340 --> 00:12:12,360
Đây là phần R( Read ) trong CRUD

212
00:12:13,460 --> 00:12:15,860
Từ khoá cần dùng ở đây là SELECT

213
00:12:16,960 --> 00:12:19,880
SELECT sẽ lấy danh sách các cột.

214
00:12:21,700 --> 00:12:23,730
dấu (*) có nghĩa toàn bộ các cột.

215
00:12:23,730 --> 00:12:27,080
FROM là từ khoá và Users,
như bạn đã biết, tên của bảng đã tạo.

216
00:12:27,080 --> 00:12:30,340
Bạn có thể hoặc không đưa vế WHERE
vào trong câu lệnh này.

217
00:12:30,340 --> 00:12:31,680
Câu lệnh bên trên

218
00:12:31,680 --> 00:12:35,610
sẽ chọn tất cả các dòng và cột trong
bảng Users đã được tạo sẵn.

219
00:12:35,610 --> 00:12:37,790
SELECT * FROM Users. Okay?

220
00:12:37,790 --> 00:12:41,780
Còn câu lệnh phía dưới sẽ chọn
chỉ một dòng trong cơ sở dữ liệu của ta.

221
00:12:41,780 --> 00:12:44,340
Hoặc có thể nhiều dòng 

222
00:12:44,340 --> 00:12:48,090
nếu thoả điều kiện của vế WHERE, OK?

223
00:12:48,090 --> 00:12:50,130
Ta hãy thực hiện câu lệnh trên nào!

224
00:12:50,130 --> 00:12:53,700
Thực ra, ta đang vô thức chạy những
câu lệnh trên khi thao tác

225
00:12:53,700 --> 00:12:57,561
chọn để hiện ra dữ liệu của bảng

226
00:12:57,561 --> 00:13:03,136
A, xin lỗi.

227
00:13:03,136 --> 00:13:07,120
Tôi sẽ chuyển qua giao diện này,
chọn hiển thị dữu liệu.

228
00:13:07,120 --> 00:13:13,560
Tôi có thể thấy trong SQL Log,
dòng cuối cùng biểu thị cho thao tác đó, OK?

229
00:13:14,590 --> 00:13:18,822
Chương trình thực hiện câu lệnh đó cho ta,
nhưng vì mới học SQL nên

230
00:13:18,822 --> 00:13:24,730
ta sẽ chọn cách khó hơn để làm.

231
00:13:24,730 --> 00:13:26,340
Vả SELECT * FROM Users.

232
00:13:27,360 --> 00:13:29,740
Nhấn nút này, 
Và dưới đây ta sẽ thấy

233
00:13:29,740 --> 00:13:33,670
trong đoạn log, nó đang hiển thị
những lệnh mà ta giao.

234
00:13:33,670 --> 00:13:34,990
Gởi đi một loạt các câu lệnh...

235
00:13:34,990 --> 00:13:37,120
Nhưng mặc kệ đi, nó quá phức tạp

236
00:13:37,120 --> 00:13:39,080
Nhưng nhìn chung cũng chỉ là SQL.

237
00:13:39,080 --> 00:13:44,391
Những câu lệnh mẫu tôi cho bạn xem
thực sự rất đơn giản, đúng không?

238
00:13:44,391 --> 00:13:48,837
Chúng ta sẽ thêm vế WHERE vào
đoạn lệnh ban đầu: email='csev@umich.edu'

239
00:13:48,837 --> 00:13:51,170
Và hãy chắc rằng bạn đang gõ đúng.

240
00:13:51,170 --> 00:13:54,057
và nó sẽ hiển thị tất cả các dòng

241
00:13:54,057 --> 00:13:55,910
thoả với điều kiện đưa ra.

242
00:13:55,910 --> 00:14:00,850
Và đấy chính là cách dùng vế WHERE trong SELECT.

243
00:14:00,850 --> 00:14:03,370
Ta cũng có thể thêm một vài câu lệnh
phía cuối lệnh SELECT.

244
00:14:03,370 --> 00:14:04,890
Có thể là lệnh ORDER BY

245
00:14:04,890 --> 00:14:08,650
Trong trường hợp này: SELECT * FROM Users,
cũng giống như câu lệnh trước đó.

246
00:14:08,650 --> 00:14:11,320
Chọn ra tất cả các cột của bảng Users,

247
00:14:11,320 --> 00:14:16,190
ORDER BY, một từ khoá,

248
00:14:16,190 --> 00:14:17,990
và email, một cột trong bảng.

249
00:14:17,990 --> 00:14:20,860
Việc sắp xếp một bảng là chuyện
mà cơ sở dữ liệu có thể làm rất tốt

250
00:14:20,860 --> 00:14:24,940
Thực ra khi sắp xếp dữ liệu trong bảng,

251
00:14:24,940 --> 00:14:28,760
sẽ có một vài thủ thuật được dùng
đối với cơ sở dữ liệu.

252
00:14:28,760 --> 00:14:30,410
Những thủ thuật này,

253
00:14:30,410 --> 00:14:32,480
bạn không cần quan tâm đến nó.

254
00:14:32,480 --> 00:14:34,590
Đây là vấn đề riêng của cơ sở dữ liệu.

255
00:14:34,590 --> 00:14:36,580
Được không?

256
00:14:36,580 --> 00:14:41,950
Đây như một cơ sở dữ liệu thông minh
từ một công ty đáng giá hàng triệu đô,

257
00:14:41,950 --> 00:14:44,060
và bạn chỉ cần đặt hàng
nó qua email.

258
00:14:45,100 --> 00:14:48,200
Bạn thậm chí không cần biết đến 
thuật toán sắp xếp.

259
00:14:48,200 --> 00:14:53,670
Bạn có nó qua email. Và việc cần làm
là sử dụng cơ sở dữ liệu đó.

260
00:14:53,670 --> 00:14:56,890
Ở đây, ta đã sắp xếp nó theo email,

261
00:14:56,890 --> 00:15:03,220
và nếu muốn sắp xếp theo "name",

262
00:15:03,220 --> 00:15:05,700
bạn chỉ cần đổi "email" thành "name".

263
00:15:05,700 --> 00:15:07,790
Đôi khi bạn chỉ cần nhấn vào các header
(như "email", "name") để thực hiện điều tương tự.

264
00:15:07,790 --> 00:15:09,530
Nhưng mà ta đang học cách làm khó hơn,

265
00:15:09,530 --> 00:15:11,770
mặc dù cũng không khó lắm.

266
00:15:13,220 --> 00:15:17,030
Vậy là bạn đã học cách chọn và sắp xếp
dữ liệu từ bảng cũng vế WHERE

267
00:15:18,610 --> 00:15:21,130
Cuối cùng là phần tổng kết
những điều mà bạn đã được dạy nãy giờ.

268
00:15:22,660 --> 00:15:26,800
INSERT INTO...VALUES,

269
00:15:26,800 --> 00:15:31,505
DELETE FROM...WHERE,
UPDATE...SET...WHERE,

270
00:15:31,505 --> 00:15:34,585
SELECT...FROM...,
SELECT...FROM...ORDER BY.

271
00:15:36,105 --> 00:15:41,345
Tới đây, có thể bạn sẽ thắc mắc
mình đến đại học chỉ để học những thứ này thôi sao?

272
00:15:42,605 --> 00:15:45,025
Nó quá dễ phải không?

273
00:15:45,025 --> 00:15:46,075
Đúng là nó rất dễ.

274
00:15:46,075 --> 00:15:49,025
Đây là lí do tôi dạy SQL
sau các phần khác,

275
00:15:49,025 --> 00:15:51,085
Sau khi học được những thứ khó này,
giờ bạn đã là một IT "xịn" rồi đó.

276
00:15:51,085 --> 00:15:52,385
Bây giờ, trở lại phần dễ.

277
00:15:52,385 --> 00:15:55,090
Nhưng sẽ kèm theo 
vài sự phức tạp.

278
00:15:55,090 --> 00:15:57,830
Sau cùng, khi nói về một bảng đơn

279
00:15:57,830 --> 00:16:00,000
và một câu lệnh đại diện cho một bảng,

280
00:16:00,000 --> 00:16:02,320
nó giống như một bảng tính 
cực kì thông minh.

281
00:16:02,320 --> 00:16:06,400
Một vài người trong các bạn sẽ
nhận ra rằng khi đang học,

282
00:16:06,400 --> 00:16:08,190
các bạn đang thực sự làm điều này!

283
00:16:08,190 --> 00:16:09,980
Đã không nhận ra mình thông minh đến mức nào!

284
00:16:09,980 --> 00:16:11,950
Tôi không hình dung được rằng
mình đang làm việc với cơ sở dữ liệu.

285
00:16:13,600 --> 00:16:15,230
Nhưng nên nhớ, ta vẫn đang
thuộc mức cơ bản trong lĩnh vực này.

286
00:16:15,230 --> 00:16:19,730
Sẽ tuyệt vời hơn khi kế tiếp,

287
00:16:19,730 --> 00:16:24,730
ta sẽ tìm hiểu về mô hình hoá dữ liệu
và những mối liên hệ giữa nhiều bảng khác nhau.

288
00:16:24,730 --> 00:16:29,320
Và bạn sẽ cảm nhận được tốc độ xử lí

289
00:16:30,430 --> 00:16:33,180
khi ta khai thác thông tin về
những mối quan hệ này.

290
00:16:33,180 --> 00:16:33,890
Và nó là những điều đang chờ đợi bạn ở chương kế.