1
00:00:08,806 --> 00:00:11,924
https://youtu.be/RcKZnB1wa4c
So before lunch we developed
a logical model,

2
00:00:11,924 --> 00:00:15,050
after lunch we developed
a physical model.

3
00:00:16,380 --> 00:00:19,260
And sort of implemented it in the database
and then we went home for the night.

4
00:00:19,260 --> 00:00:24,200
And now it's the next morning and it's
time to insert some data into our tables.

5
00:00:24,200 --> 00:00:27,360
Now, you've got to remember all the keys
and fields and stuff like that.

6
00:00:28,850 --> 00:00:32,950
Just like we're inserting data from
kind of like the outward simple things

7
00:00:32,950 --> 00:00:37,380
to the more central ones, we're going to
do the same thing when we insert data.

8
00:00:37,380 --> 00:00:38,190
Okay?

9
00:00:38,190 --> 00:00:40,279
And so we're using the INSERT INTO.

10
00:00:40,279 --> 00:00:45,135
And this is a good time to point out
that the keywords inside of SQL like

11
00:00:45,135 --> 00:00:48,081
insert into, the case doesn't matter.

12
00:00:48,081 --> 00:00:51,419
The names of the tables, the names of
the columns, may or may not matter, and

13
00:00:51,419 --> 00:00:55,520
the actual data you put in that's case
sensitive because that's your data.

14
00:00:55,520 --> 00:00:58,260
So I'm going to type INSERT INTO Artist.

15
00:00:58,260 --> 00:01:02,800
And the key thing that is important here
is we're not specifying the id field.

16
00:01:02,800 --> 00:01:09,750
So if you recall, in the Artist table
we have an id field and a name field.

17
00:01:09,750 --> 00:01:15,710
But if you look over here,
the id field is an auto-generated field.

18
00:01:15,710 --> 00:01:17,970
It's not really showing up very well
because we don't have a type.

19
00:01:17,970 --> 00:01:19,980
So the id field is auto-generated.

20
00:01:19,980 --> 00:01:21,450
So when I write this SQL

21
00:01:24,110 --> 00:01:28,283
I don't need to specify the id because as
part of our contract we made a contract

22
00:01:28,283 --> 00:01:31,410
with a database that says,
you assign that.

23
00:01:31,410 --> 00:01:36,502
So I'm going to run this now, INSERT INTO
Artist with a name of Led Zeppelin.

24
00:01:36,502 --> 00:01:40,435
And if then we Browse Data and we go
look at the artist, it's added the number 1.

25
00:01:40,435 --> 00:01:44,429
Kind of predictable. You can kind of
guess where the next one's going to be,

26
00:01:44,429 --> 00:01:48,731
so the next one thing we're going to do is
we're going to insert another artist in,

27
00:01:48,731 --> 00:01:50,528
we're going to insert AC/DC in.

28
00:01:50,528 --> 00:02:00,200
And, we inserted that.

29
00:02:00,200 --> 00:02:03,070
Now, if we go take a look at the
data again, we got 2.

30
00:02:03,070 --> 00:02:06,027
And if we did a new record here, it
would automatically provide this for us, right?

31
00:02:06,027 --> 00:02:10,333
I mean, it would let us change this, but
it would want to pick the next number 3.

32
00:02:10,333 --> 00:02:13,261
So what we've done here is
both inserted the record,

33
00:02:13,261 --> 00:02:16,980
but we've also established for
within this database a new number.

34
00:02:16,980 --> 00:02:22,396
1 means Led Zepplin, and 2 means AC/DC.
Okay?

35
00:02:22,396 --> 00:02:27,204
So then, the next thing we're
going to do is insert in the Genre,

36
00:02:27,204 --> 00:02:31,560
kind of working outward in,
and insert the value Rock and

37
00:02:31,560 --> 00:02:35,943
the value Metal, and now I'm
going to show you a little trick here.

38
00:02:35,943 --> 00:02:40,376
You can actually, in this user
interface of most of these things,

39
00:02:40,376 --> 00:02:45,360
not just this one, you can usually put
more than one command in as long as you

40
00:02:45,360 --> 00:02:47,518
put a semicolon at the end of it.

41
00:02:47,518 --> 00:02:51,234
So I'm going to, if I did that right,
semicolon at the end of it.

42
00:02:51,234 --> 00:02:54,479
So I'm going to do an INSERT INTO
Genre of Rock and

43
00:02:54,479 --> 00:02:58,234
an INSERT INTO Genre of Metal and
I'm going to run the SQL.

44
00:03:00,277 --> 00:03:02,548
Oh, I wonder if I did it twice.

45
00:03:02,548 --> 00:03:05,359
I did.

46
00:03:05,359 --> 00:03:07,110
So I'll just delete this record.

47
00:03:07,110 --> 00:03:07,810
Good bye.

48
00:03:07,810 --> 00:03:08,570
Delete that record.

49
00:03:08,570 --> 00:03:09,379
Good bye.

50
00:03:09,379 --> 00:03:12,109
So I did two inserts and
I hit the botton twice, so

51
00:03:12,109 --> 00:03:14,579
that's how I ended up
with two copies of it.

52
00:03:14,579 --> 00:03:21,030
So Rock for the rest of this lecture is
the value 1 and Metal is the value 2.

53
00:03:22,070 --> 00:03:25,480
And again now when we're making the Track
table we don't have to put Rock, Rock, Rock,

54
00:03:25,480 --> 00:03:28,000
Rock, Rock, we just put 1, 1, 1, 1, 1.

55
00:03:28,000 --> 00:03:31,790
Because 1 is not a string but
it's a number, that turns out to be okay.

56
00:03:33,480 --> 00:03:37,330
So now we're going to take
a look at the album and

57
00:03:37,330 --> 00:03:42,020
this is the first situation where we've
got to do a primary key, a foreign key, right?

58
00:03:42,020 --> 00:03:43,760
So we got an Album table.

59
00:03:43,760 --> 00:03:48,110
And the Album has a primary key which is
going to be automatically generated for us.

60
00:03:48,110 --> 00:03:49,910
And a foreign key called artist_id.

61
00:03:49,910 --> 00:03:53,180
Because the album points to the artist.

62
00:03:54,410 --> 00:03:57,521
And we only add data at the starting
point of these arrows and so

63
00:03:57,521 --> 00:03:59,053
that's what we're doing.

64
00:03:59,053 --> 00:04:03,179
So this one we have to put in title but we
don't have to put in id so we don't have

65
00:04:03,179 --> 00:04:06,798
to put that in but we do have to explicitly
put in artist_id. So when you insert

66
00:04:06,798 --> 00:04:11,850
into Album you're going to have a title
and then we're going to have an artist_id.

67
00:04:11,850 --> 00:04:18,603
This number we have to remember that
2 was AC/DC and 1 was Led Zeppelin.

68
00:04:18,603 --> 00:04:21,567
Now when we're doing this by
hand it's a little tricky and

69
00:04:21,567 --> 00:04:24,652
you find yourself flipping back and
forth to remember like,

70
00:04:24,652 --> 00:04:27,391
oh which one was Led Zeppelin,
which one was AC/DC?

71
00:04:27,391 --> 00:04:31,471
And it seems like in the short term it'd
be easier just to put the string in, but

72
00:04:31,471 --> 00:04:33,939
that's the whole thing
we're trying to avoid. Okay?

73
00:04:33,939 --> 00:04:38,765
So for foreign keys we have
to put the numbers in explicitly

74
00:04:38,765 --> 00:04:42,880
because we or the code we write
has got to remember them.

75
00:04:42,880 --> 00:04:47,177
So remembering what these numbers are,
the 2 and the 1, is a lot easier for

76
00:04:47,177 --> 00:04:51,040
a program to remember than it is for
you to remember doing this by hand.

77
00:04:51,040 --> 00:04:53,178
Now normally you wouldn't
insert this stuff,

78
00:04:53,178 --> 00:04:56,438
you would have code that inserts it,
and it's really easy for it to say,

79
00:04:56,438 --> 00:05:00,170
oh I just inserted Genre, and just
I inserted Rock, and I got back a 2.

80
00:05:00,170 --> 00:05:04,160
So actually you can get that, and so
you the human don't have to remember this.

81
00:05:05,210 --> 00:05:06,070
So let's run these.

82
00:05:07,770 --> 00:05:10,470
This is our first one that's doing,

83
00:05:10,470 --> 00:05:18,030
and I'll put a semicolon here so
we can do it all at once.

84
00:05:18,030 --> 00:05:19,420
And I'll only push the button once.

85
00:05:21,760 --> 00:05:25,040
Okay, and if we do Browse Data and
we look at the Album,

86
00:05:26,960 --> 00:05:30,230
the id was auto-generated and
artist_id was something that we chose and

87
00:05:30,230 --> 00:05:33,840
title was something that we put in,
so now we're in pretty good shape.

88
00:05:33,840 --> 00:05:36,380
Now the last thing we're going to
do is probably the most complex.

89
00:05:38,030 --> 00:05:38,530
But it's not.

90
00:05:40,260 --> 00:05:45,130
We have and id's come in for
free, title is data,

91
00:05:45,130 --> 00:05:47,380
the length, rating, and count,
that's just data.

92
00:05:47,380 --> 00:05:52,415
And then we have two arrows, right,
pointing to Album and Genre.

93
00:05:52,415 --> 00:05:55,860
Album and Genre, and so
we have two foreign keys.

94
00:05:55,860 --> 00:05:58,740
Now here is where we have replication now.

95
00:05:58,740 --> 00:06:05,250
Those two are going to the same album, and
these two are going to the same album.

96
00:06:05,250 --> 00:06:07,650
Same genre, same genre.

97
00:06:07,650 --> 00:06:11,570
It's okay to have replication
as long as they're numbers.

98
00:06:11,570 --> 00:06:13,170
That's really the essence
of what we've done.

99
00:06:13,170 --> 00:06:15,820
We just like went in a big circle.

100
00:06:15,820 --> 00:06:19,220
Took replicated strings and
turned them into replicated numbers.

101
00:06:19,220 --> 00:06:20,790
So these are okay.

102
00:06:20,790 --> 00:06:21,710
And so then what you're going to do,

103
00:06:21,710 --> 00:06:23,620
is you're just going to take each
of these rows that you know.

104
00:06:23,620 --> 00:06:25,070
Well, we don't need that.

105
00:06:25,070 --> 00:06:26,040
Clear.

106
00:06:26,040 --> 00:06:28,730
Take each of these rows, and
you know most of the data.

107
00:06:28,730 --> 00:06:33,220
We're going to put in the title, we're
going to put in the album_id, the length,

108
00:06:33,220 --> 00:06:34,060
the rating, the count.

109
00:06:34,060 --> 00:06:35,000
Put all those things in

110
00:06:36,180 --> 00:06:39,280
explicitly, this comes automatically,
and we're going to do that.

111
00:06:39,280 --> 00:06:42,949
title, rating, length, count,
album_id, genre_id.

112
00:06:42,949 --> 00:06:47,250
And then we have the values, and then
these are the two foreign key values.

113
00:06:47,250 --> 00:06:49,110
And they point to those rows.

114
00:06:49,110 --> 00:06:52,910
And again this is the point in time where you
sort of have written down on a piece of paper

115
00:06:52,910 --> 00:06:55,280
what these little numbers were
if you were doing it by hand.

116
00:06:56,600 --> 00:06:57,210
It won't be too bad.

117
00:06:59,130 --> 00:07:01,890
I luckily have them cut and pasted,
so they are all easy for me.

118
00:07:01,890 --> 00:07:05,394
And if you are following along,
then you just cut and paste these guys.

119
00:07:05,394 --> 00:07:09,816
And I'll be super lazy, and
I'll copy all four SQL statements, and

120
00:07:09,816 --> 00:07:14,617
run over here, paste them in, and
then I am going to put a semicolon,

121
00:07:14,617 --> 00:07:18,581
carefully, not on each line,
but at the end of the values thing,

122
00:07:18,581 --> 00:07:21,590
So I'll put a semicolon
on each of these guys.

123
00:07:21,590 --> 00:07:24,360
Forgot to put a semicolon on the last one.

124
00:07:27,378 --> 00:07:30,710
And I'm going to hit the run,
and I'll look at the data.

125
00:07:30,710 --> 00:07:32,480
And I'll look at the Track data.

126
00:07:33,980 --> 00:07:34,970
And there we are.

127
00:07:34,970 --> 00:07:35,760
It's all there.

128
00:07:35,760 --> 00:07:38,153
We can kind of move this over.

129
00:07:38,153 --> 00:07:41,860
And that's the Track data and
again we specified all those things.

130
00:07:41,860 --> 00:07:45,450
So if you look at all these tables,
we've constructed them outwardly in.

131
00:07:45,450 --> 00:07:48,621
We started like at the Genre and
the Artist and worked our way in so

132
00:07:48,621 --> 00:07:51,501
that we could establish those numbers so
then we could link

133
00:07:51,501 --> 00:07:55,407
to those numbers as we put things in
the Album and then we established numbers.

134
00:07:55,407 --> 00:07:59,731
And so the foreign keys are the starting
points, the primary keys the ending points

135
00:07:59,731 --> 00:08:03,374
and we worked in. And so we have
replication of numbers in this column but

136
00:08:03,374 --> 00:08:05,450
we don't have replication of strings.

137
00:08:05,450 --> 00:08:07,750
So the word Rock, if you
look at all this data.

138
00:08:08,760 --> 00:08:11,674
Okay that's a bad example, forget that.

139
00:08:11,674 --> 00:08:15,550
The word Metal is better.

140
00:08:15,550 --> 00:08:18,466
That doesn't count, that's just a title,
that's not really the word Rock.

141
00:08:18,466 --> 00:08:22,717
The word Metal as a genre
only appears once in the entire

142
00:08:22,717 --> 00:08:23,810
database.

143
00:08:23,810 --> 00:08:29,000
And the thing about it is like what if
there were a million of these, right?

144
00:08:29,000 --> 00:08:29,890
One million.

145
00:08:29,890 --> 00:08:33,020
You say okay, what's the difference?

146
00:08:33,020 --> 00:08:35,200
The word metal verses whatever.

147
00:08:35,200 --> 00:08:36,090
Versus the number 2.

148
00:08:36,090 --> 00:08:40,400
If there's millions of them it's
not just that it takes up storage,

149
00:08:40,400 --> 00:08:43,590
it's it has to do with how
much has to be scanned.

150
00:08:43,590 --> 00:08:47,825
So part of what you're trying to do in
databases is reduce the amount of data that

151
00:08:47,825 --> 00:08:51,176
has to be scanned to get to
a particular piece of information.

152
00:08:51,176 --> 00:08:56,168
And so the difference between Metal, which
might actually be 128 characters, and

153
00:08:56,168 --> 00:09:00,939
a number, which is actually four characters, that
turns out to be different. And it's not that

154
00:09:00,939 --> 00:09:05,710
we can't start on disk drives. Disk drives
are big. It's just that we can't scan past

155
00:09:05,710 --> 00:09:10,655
it fast enough and we can't built indexes
so we can jump past it even faster, okay?

156
00:09:10,655 --> 00:09:13,682
So that's what we have
achieved in this section,

157
00:09:13,682 --> 00:09:18,009
is we've inserted all these data and
we've linked things together and

158
00:09:18,009 --> 00:09:23,225
we've modeled relationships and connection
points rather than replicating data.