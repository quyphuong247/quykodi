0
00:00:00,000 --> 00:00:00,001
http://youtu.be/Gagr_KyDYAA
Tung Dinh _ VGU

1
00:00:00,000 --> 00:00:02,950
Chuyện tiếp theo ta làm là

2
00:00:02,950 --> 00:00:07,140
làm 1 robot đi vòng vòng trong hộp

3
00:00:07,140 --> 00:00:14,920
ta có cách cạnh của hộp

4
00:00:14,920 --> 00:00:18,040
và ta đặt con robot trong đây

5
00:00:18,040 --> 00:00:20,520
Vấn đề đặt ra hôm nay là

6
00:00:20,520 --> 00:00:23,790
robot sẽ làm gì nếu đụng vào tường

7
00:00:23,790 --> 00:00:32,580
Đây là robot, và nó đi theo hướng này

8
00:00:32,580 --> 00:00:36,890
khi đụng trúng tường, ta sẽ cho nó
xoay và

9
00:00:36,890 --> 00:00:39,970
đi dọc theo bức tường

10
00:00:39,970 --> 00:00:46,660
Tương tự thì, nếu robot đi 
theo hướng khác

11
00:00:46,660 --> 00:00:53,110
đối với bức tường, hướng này đây

12
00:00:53,110 --> 00:00:59,280
ta sẽ cho nó xoay hướng khác, 
và đi dọc theo hướng này

13
00:00:59,280 --> 00:01:03,400
Để làm được, ta cần biết cách
di chuyển của robot

14
00:01:03,400 --> 00:01:11,210
Ta sẽ đặt 2 motors bước 
cho bánh xe

15
00:01:11,210 --> 00:01:15,610
Nếu như 2 motors quay cùng hướng

16
00:01:15,610 --> 00:01:16,220
nó sẽ di chuyển 

17
00:01:16,220 --> 00:01:18,800

18
00:01:18,800 --> 00:01:24,150
So, if the stepper motors
are rotating, it will move.

19
00:01:24,150 --> 00:01:27,840
Cái thứ hai cần nữa là cảm biến

20
00:01:27,840 --> 00:01:31,150
Ta sẽ đặt 2 cảm biến vào đây, 
cảm biến bơm

21
00:01:31,150 --> 00:01:38,965
ở phía trước của robot, nên ta 
có thể biết nó đụng tường chưa

22
00:01:38,965 --> 00:01:42,520
Theo đúng trình tự thì

23
00:01:42,520 --> 00:01:45,090
khi robot đụng tường

24
00:01:45,090 --> 00:01:48,240
cảm biến trái sẽ chạm trước

25
00:01:48,240 --> 00:01:50,110
DR. JONATHAN VALVANO: OK, that's right.

26
00:01:50,110 --> 00:01:58,060
Nếu cảm biến trái chạm trước, 
ta sẽ xoay phải

27
00:01:58,060 --> 00:02:08,803
Ngược lại, nếu cảm biến phải chạm trước, 
ta sẽ xoay trái

28
00:02:08,803 --> 00:02:10,594
Ta sẽ giao tiếp

29
00:02:10,594 --> 00:02:14,340
robot với microcontroller thế nào?

30
00:02:14,340 --> 00:02:17,280
Rồi, đầu tiên là pin

31
00:02:17,280 --> 00:02:23,287
Vì ta dùng motors, ta sẽ không 
trực tiếp cấp nguồn motors bằng lauchpad

32
00:02:23,287 --> 00:02:24,120
Ta sẽ dùng pin

33
00:02:24,120 --> 00:02:27,104

34
00:02:27,104 --> 00:02:29,530
Điều này sẽ bảo vệ launchpad

35
00:02:29,530 --> 00:02:31,520
khi motors cần nhiều dòng

36
00:02:31,520 --> 00:02:32,840
Chính xác

37
00:02:32,840 --> 00:02:33,340
Yes.

38
00:02:33,340 --> 00:02:36,040

39
00:02:36,040 --> 00:02:40,090
Để chạy launchpad, ta dùng điều chỉnh áp

40
00:02:40,090 --> 00:02:45,750
đổi từ 8.4 V từ pin sang 5 V

41
00:02:45,750 --> 00:02:48,880
Và nối vào Vbus ở launchpad

42
00:02:48,880 --> 00:02:55,200

43
00:02:55,200 --> 00:02:56,690
ground nối vào ground

44
00:02:56,690 --> 00:02:59,820

45
00:02:59,820 --> 00:03:02,630
Xong khoảng pin cấp nguồn lauchpad

46
00:03:02,630 --> 00:03:07,600
Để giao tiếp với motors, ta sẽ 
dùng điều khiển motors

47
00:03:07,600 --> 00:03:14,130
2 con L293 để điều khiển

48
00:03:14,130 --> 00:03:22,810
Motor bước có 2 cuộn dây, 
A và B. Ta có 2 L293s

49
00:03:22,810 --> 00:03:25,270
bởi ta dùng 2 motors bước

50
00:03:25,270 --> 00:03:29,920
1 bên trái, 1 bên phải

51
00:03:29,920 --> 00:03:38,290
Và ta sẽ điều khiển motors 
với các output ports song song

52
00:03:38,290 --> 00:03:42,340
Chúng là PB7 tới PB4

53
00:03:42,340 --> 00:03:45,330
và đối với motor phải

54
00:03:45,330 --> 00:03:52,870
Ta dùng PB3 tới PB0

55
00:03:52,870 --> 00:03:56,105
Hiểu về dòng điện là rất quan trọng

56
00:03:56,105 --> 00:04:01,560
Dòng điện chạy qua motors
là do từ pin 

57
00:04:01,560 --> 00:04:15,250
nối tới L293, qua cuộng dây, tới chân ground, 
rồi quay về pin

58
00:04:15,250 --> 00:04:19,089
Dòng điện đây, chạy qua cuộn dây

59
00:04:19,089 --> 00:04:24,870
không chạy qua launchpad hay microcontroller

60
00:04:24,870 --> 00:04:28,690
Nó chạy thẳng từ pin, sang bộ điề khiển

61
00:04:28,690 --> 00:04:31,480
tới chân ground của điều khiển, 
và ngược về pin

62
00:04:31,480 --> 00:04:34,030
Inputs là gì thế Jon

63
00:04:34,030 --> 00:04:38,540
Đúng rồi, ta cũng phải nối
inputs lại nữa

64
00:04:38,540 --> 00:04:44,320
Ta có ở đây 2 công tắc hành trình, 
nối chúng với PE0 và PE1

65
00:04:44,320 --> 00:04:48,640
công tắc trái nối vào PE1

66
00:04:48,640 --> 00:04:52,070
và phải nối vào PE0

67
00:04:52,070 --> 00:04:54,020
Chúng là logic dương

68
00:04:54,020 --> 00:04:58,004
Nếu công tắc phải đụng, đây sẽ là 1

69
00:04:58,004 --> 00:04:59,920
nếu cái trái đụng, đây sẽ là 1

70
00:04:59,920 --> 00:05:02,420
Vậy thì, chúng cũng tương tự như công tắc thường

71
00:05:02,420 --> 00:05:08,070
trừ việc nó nhìn giống như cảm biến

72
00:05:08,070 --> 00:05:11,230
Đúng rồi

73
00:05:11,230 --> 00:05:16,350
Giờ ta sẽ tìm hiểu về cách microcontroller
điều khiển motor bước

74
00:05:16,350 --> 00:05:21,810
Mỗi motor bước có 2 cuộn dây

75
00:05:21,810 --> 00:05:24,760
A và B

76
00:05:24,760 --> 00:05:27,300
và 4 chân output của motor

77
00:05:27,300 --> 00:05:34,400
Nếu ta output 5, sẽ là 0101

78
00:05:34,400 --> 00:05:40,750
Ta thấy dòng điện chạy qua cuộn dây A
sẽ hướng lên, bởi đây là 1

79
00:05:40,750 --> 00:05:42,460
và 0 ở đây

80
00:05:42,460 --> 00:05:48,110
Tương tự, dòng điện đi lên cuộn B

81
00:05:48,110 --> 00:05:53,610
Nếu ta đổi output thành 6, mọi chuyện sẽ là

82
00:05:53,610 --> 00:05:57,110
nó sẽ đẩo chiều dòng điện ở cuộn B

83
00:05:57,110 --> 00:06:01,020
Cuộn B bây giờ có dòng điện hướng xuống

84
00:06:01,020 --> 00:06:05,850
Ở cuộn A vấn hướng lên

85
00:06:05,850 --> 00:06:11,810
Bước này ảnh hưởng đến sự thay đổi trong motor

86
00:06:11,810 --> 00:06:17,590
Ta quan sát góc 

87
00:06:17,590 --> 00:06:26,080
hiện tại của motor, thay đổi từ 5 sang 6

88
00:06:26,080 --> 00:06:32,330
sẽ làm cho motor quay 1 góc

89
00:06:32,330 --> 00:06:35,080
được xác định bằng tính vật lý của nó

90
00:06:35,080 --> 00:06:38,535
Trường hợp này là 1.8 độ

91
00:06:38,535 --> 00:06:41,490
Khi mua 1 motor bước

92
00:06:41,490 --> 00:06:46,040
Ta chọn dựa trên góc

93
00:06:46,040 --> 00:06:49,097
nó phải quay mỗi bước, mà ta viết lên?

94
00:06:49,097 --> 00:06:50,180
Đúng rồi

95
00:06:50,180 --> 00:06:58,380
Cái này có 200 bước mỗi vòng, 
nhưng ta chưa viết hết

96
00:06:58,380 --> 00:06:59,320
Còn 2 cái nữa

97
00:06:59,320 --> 00:07:02,880
Nếu ta output 10

98
00:07:02,880 --> 00:07:07,490
nó sẽ quay, đảo chiều dòng điện cuộn kia

99
00:07:07,490 --> 00:07:13,650
Và bởi vì cuộng A là 10, dòng điện hướng xuống

100
00:07:13,650 --> 00:07:18,460
Cuộn B vẫn là 10, hướng xuống

101
00:07:18,460 --> 00:07:26,745
Và motor sẽ quay 1 bước 1.8 độ nữa

102
00:07:26,745 --> 00:07:34,180
Ta còn 1 bước nữa là 9, 1001

103
00:07:34,180 --> 00:07:39,040
Bạn sẽ thấy rằng mỗi lần bước, ta sẽ đảo chiều

104
00:07:39,040 --> 00:07:41,890
một trong 2 cuộn

105
00:07:41,890 --> 00:07:50,570
Nhắc lại, cuộn A vẫn đang hướng xuống, 10, 
nhưng cuộn B đã đảo thành 01

106
00:07:50,570 --> 00:07:55,560
Các bước 5 6 10 9 được lập lại 

107
00:07:55,560 --> 00:08:07,560
nó sẽ là 5 6 10 9 5 6 10 9
lập lại lập lại

108
00:08:07,560 --> 00:08:13,390
Mỗi lần ta bước 1 giá trị mới, nó xoay 1.8 độ

109
00:08:13,390 --> 00:08:20,980

110
00:08:20,980 --> 00:08:27,740
từ 5 6 10 9 5 6 10 9

111
00:08:27,740 --> 00:08:29,240
Nó xoay

112
00:08:29,240 --> 00:08:32,330
Để quay 2 motor cùng chiều kim đồng hồ

113
00:08:32,330 --> 00:08:44,410
ta sẽ output dãy 0x55 0x66 0xAA 0x99
lần lượt lặp lại

114
00:08:44,410 --> 00:08:49,850
Tốc độ quay sẽ là 1.8 độ

115
00:08:49,850 --> 00:08:54,180
chia cho thời gian giữa outputs

116
00:08:54,180 --> 00:08:56,440
Tóm lại, với motor bước

117
00:08:56,440 --> 00:09:02,930
ta có thể điều khiển cả vị trí bằng 4 5 10 9

118
00:09:02,930 --> 00:09:06,130
và cũng có thể điều kheiern tốc độ xoay

119
00:09:06,130 --> 00:09:09,970
bằng việc thay đổi thời gian giữa bước

120
00:09:09,970 --> 00:09:14,635
Tới máy trạng thái hữu hạn

121
00:09:14,635 --> 00:09:18,100
Giờ ta viết sơ đồ máy trạng thái hữu hạn

122
00:09:18,100 --> 00:09:22,990
nhưng đầu tiên, ta phải điền hết 
các điều kiện đã

123
00:09:22,990 --> 00:09:27,780
là chuỗi inputs

124
00:09:27,780 --> 00:09:29,190
Inputs

125
00:09:29,190 --> 00:09:34,030
Ở đây ta có PE1 và PE0 là inputs

126
00:09:34,030 --> 00:09:37,520
Và chuỗi outputs

127
00:09:37,520 --> 00:09:40,330
DR. JONATHAN VALVANO:
OK, we have outputs,

128
00:09:40,330 --> 00:09:43,620
ở đây là PB7 đến PB0

129
00:09:43,620 --> 00:09:47,474

130
00:09:47,474 --> 00:09:49,890
và chuỗi trạng thái

131
00:09:49,890 --> 00:09:53,200
Đúng, trạng thái

132
00:09:53,200 --> 00:09:56,800
Ta có nhiều trạng thái đây

133
00:09:56,800 --> 00:10:06,809

134
00:10:06,809 --> 00:10:08,600
Chúng sẽ 

135
00:10:08,600 --> 00:10:15,850
tương đương với từng trường hợp trong robot

136
00:10:15,850 --> 00:10:22,760
Vậy, ta sẽ dùng các trạng thái để
xác định cái ta biết

137
00:10:22,760 --> 00:10:24,240
Cái ta biết là đúng

138
00:10:24,240 --> 00:10:29,686

139
00:10:29,686 --> 00:10:30,185
2 cái nữa

140
00:10:30,185 --> 00:10:34,640
Và rồi ta cũng cần đồ thị chuyển trạng thái nữa

141
00:10:34,640 --> 00:10:38,672
sẽ cho ta biết cách chuyển từ trạng thái này
sang trạng thái khác

142
00:10:38,672 --> 00:10:40,020
OK

143
00:10:40,020 --> 00:10:47,080
Ví dụ, nếu không có công tắc nào nhấn

144
00:10:47,080 --> 00:10:52,780
ta sẽ đi theo hướng này

145
00:10:52,780 --> 00:10:57,416
Thêm 1 cái nữa là xác định output

146
00:10:57,416 --> 00:11:05,830
nó sẽ làm di chuyển

147
00:11:05,830 --> 00:11:10,340
Tóm lại là ta dùng outputs để thay đổi

148
00:11:10,340 --> 00:11:15,180
Rõ ràng hơn, thì ta thấy robot di chuyển thẳng tới

149
00:11:15,180 --> 00:11:20,863
ta sẽ đặt output là 0x55, 0x66, 0xAA và 0x99

150
00:11:20,863 --> 00:11:25,810
Nó sẽ làm motor chạy thẳng

151
00:11:25,810 --> 00:11:31,166
Còn nếu ta muốn robot quay ngược lại thì sao?

152
00:11:31,166 --> 00:11:32,665
Oh, ngược lại à?

153
00:11:32,665 --> 00:11:35,180

154
00:11:35,180 --> 00:11:38,650
Để đi ngược lại, nói cách khác, nếu 
cả hai công tắc bị nhấn

155
00:11:38,650 --> 00:11:43,350
ta có thể quay motor hướng khác

156
00:11:43,350 --> 00:11:52,260
Vậy nếu ta output 0x99 0xAA 0x66 0x55, 
bở cả 2 công tắc bị nhấn

157
00:11:52,260 --> 00:11:55,357
thì cả hai motor sẽ quay hướng khác

158
00:11:55,357 --> 00:11:56,690
và robot sẽ đi ngược

159
00:11:56,690 --> 00:11:59,780

160
00:11:59,780 --> 00:12:07,510
Nếu ta nhấn công tắc phải, nghĩ là ta quay trái

161
00:12:07,510 --> 00:12:14,350
Quay trái thì 1 motor quay hướng này

162
00:12:14,350 --> 00:12:16,830
cái kia quay hướng khác

163
00:12:16,830 --> 00:12:21,230
Bạn thấy đấy, 1 motor sẽ là 5 6 10 9

164
00:12:21,230 --> 00:12:28,530
cái kia sẽ là 5 9 10 6, thì robot sẽ quay trái

165
00:12:28,530 --> 00:12:33,030
Nếu ta mướn quay phải, nói cách khác, 
công tắc trái bị nhấn

166
00:12:33,030 --> 00:12:35,790
ta sẽ đảo thứ tự lại

167
00:12:35,790 --> 00:12:43,340

168
00:12:43,340 --> 00:12:47,810
Nghĩa là, 1 motor là 5 9 10 6, và cái kia

169
00:12:47,810 --> 00:12:51,632
là 5 6 10 9, robot sẽ quay phải

170
00:12:51,632 --> 00:13:00,010

171
00:13:00,010 --> 00:13:04,760
Nhắc lại, tốc độ quay motor

172
00:13:04,760 --> 00:13:09,820
phụ thuộc vào delta t, thời gian giữa các outputs

173
00:13:09,820 --> 00:13:14,300
Ta có thể chọn tốc độ là độ/s

174
00:13:14,300 --> 00:13:17,365
bằng việc xác định thời gian giữa trạng thái

175
00:13:17,365 --> 00:13:19,280
Vậy, một trong số đó

176
00:13:19,280 --> 00:13:22,570
ta phải chắc chắn có đồ thị chuyển trạng thái

177
00:13:22,570 --> 00:13:31,420
ta cũng sẽ gán nhẵn từng đường mũi tên 

178
00:13:31,420 --> 00:13:36,420
nghĩa là ta phải gán mọi inputs vào mọi trạng thái

179
00:13:36,420 --> 00:13:39,655
Vậy thì, Jon sẽ hoàn thiện hết đò thị cho bạn

180
00:13:39,655 --> 00:13:41,350
OK

181
00:13:41,350 --> 00:13:45,630
Trong trường hợp này, bất kể inputs là gì

182
00:13:45,630 --> 00:13:52,030
ta cũng sẽ quay nguyên một vòng

183
00:13:52,030 --> 00:14:01,186
và ở đây, bất kể là gì, ta cũng quay một vòng

184
00:14:01,186 --> 00:14:06,840
Bạn có thể thấy được output là gì
khi nó đến trạng thái đầu

185
00:14:06,840 --> 00:14:17,060
Tương tự ở đây, 11 11 11

186
00:14:17,060 --> 00:14:20,640
và cái này sẽ là 01 01

187
00:14:20,640 --> 00:14:24,680

188
00:14:24,680 --> 00:14:35,280
Đây sẽ là 00 01 10 00 01 10 00 01 10

189
00:14:35,280 --> 00:14:40,420
Vậy ta đã mặc định cho từng trạng thái 
có thể xảy ra rồi

190
00:14:40,420 --> 00:14:45,000
Mỗi trạng thái sẽ có 4 trạng thái tiếp theo
