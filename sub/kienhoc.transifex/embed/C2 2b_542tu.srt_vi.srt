0
00:00:00,000 --> 00:00:00,001
http://youtu.be/LD1dd8uRfj4

1
00:00:00,000 --> 00:00:00,410

2
00:00:00,410 --> 00:00:03,970
(JONATHAN VALVANO) kế tiếp, hãy xem những thành phần của hệ thống nhúng

3
00:00:03,970 --> 00:00:06,700
kết hợp với nhau như thế nào.

4
00:00:06,700 --> 00:00:07,950
Ta có cái máy tính.

5
00:00:07,950 --> 00:00:12,100

6
00:00:12,100 --> 00:00:17,150
và ta kết nối với cổng input output.

7
00:00:17,150 --> 00:00:19,380
1 số thứ chỉ có output.

8
00:00:19,380 --> 00:00:22,720
1 số có cả input và output

9
00:00:22,720 --> 00:00:24,550
Số khác chỉ có input.

10
00:00:24,550 --> 00:00:30,090
Ta sẽ kết nối vào những thiết bị khác, ở đây ta có

11
00:00:30,090 --> 00:00:49,340
điện, cơ, hoá, sinh, quang...

12
00:00:49,340 --> 00:00:50,830
Bạn có thể kết nối thêm nhiều thiết bị nữa.

13
00:00:50,830 --> 00:00:53,940

14
00:00:53,940 --> 00:00:57,780
Giờ nhìn vào trong máy tính.

15
00:00:57,780 --> 00:01:00,785
Trong máy tính, ta có 1 vi xử lý.

16
00:01:00,785 --> 00:01:03,390

17
00:01:03,390 --> 00:01:08,180
Vi xử lý là bộ não, thực thi mệnh lệnh.

18
00:01:08,180 --> 00:01:12,660
Vi xử lý kết nối với 2 loại bộ nhớ.

19
00:01:12,660 --> 00:01:16,900

20
00:01:16,900 --> 00:01:25,770
Ta có bộ nhớ truy xuất ngẫu nhiên, là kiểu bộ nhớ volatile

21
00:01:25,770 --> 00:01:29,660

22
00:01:29,660 --> 00:01:33,550
Nó chứa dữ liệu.

23
00:01:33,550 --> 00:01:37,340
Với loại bộ nhớ này thông tin sẽ biến mất khi mất điện.

24
00:01:37,340 --> 00:01:45,410
1 loại bộ nhớ khác là bộ nhớ chỉ đọc.

25
00:01:45,410 --> 00:01:50,230
Còn được gọi là bộ nhớ flash, là tên của công nghệ này.

26
00:01:50,230 --> 00:01:52,790
được dùng để làm ra bộ nhớ này.

27
00:01:52,790 --> 00:01:55,065
Là kiểu nonvolatile.

28
00:01:55,065 --> 00:02:04,512

29
00:02:04,512 --> 00:02:07,180
Khi mất điện dữ liệu vẫn còn trong bộ nhớ.

30
00:02:07,180 --> 00:02:10,500
Kiểu bộ nhớ này rất quan trọng với hệ thống nhúng.

31
00:02:10,500 --> 00:02:14,835
Ta sẽ lưu code của software vào bộ nhớ ROM này.

32
00:02:14,835 --> 00:02:16,345
bộ nhớ ROM này.

33
00:02:16,345 --> 00:02:22,450
Và như tôi nói lúc trước, 1 phần quan trọng của hệ thống nhúng

34
00:02:22,450 --> 00:02:23,700
là input output.

35
00:02:23,700 --> 00:02:27,880

36
00:02:27,880 --> 00:02:31,890
Và ta phải kết nối tất cả những thứ này vào 1 bus.

37
00:02:31,890 --> 00:02:34,220
Đây là tất cả những cấu phần của hệ thống nhúng.

38
00:02:34,220 --> 00:02:39,890

39
00:02:39,890 --> 00:02:44,660
Hình tôi vẽ trong slide trước gọi là

40
00:02:44,660 --> 00:02:47,980
máy tính kiểu Von Neumann.

41
00:02:47,980 --> 00:02:54,400
Có 2 kiểu bộ nhớ vào I/O

42
00:02:54,400 --> 00:02:57,510
gắn vào cùng 1 bus.

43
00:02:57,510 --> 00:03:04,350
Ta có vi xử lý, là thành phần tính toán.

44
00:03:04,350 --> 00:03:12,040
có bộ nhớ RAM, là nơi chứa dữ liệu.

45
00:03:12,040 --> 00:03:19,990
Có ROM, chứa chương trình và I/O,

46
00:03:19,990 --> 00:03:26,040
giao tiếp với bên ngoài.

47
00:03:26,040 --> 00:03:28,220
Đó là máy Von Neumann.

48
00:03:28,220 --> 00:03:31,910
Ta sẽ thấy tất cả thông tin được truyền tải

49
00:03:31,910 --> 00:03:34,870
thông qua bus.

50
00:03:34,870 --> 00:03:40,910
Cortex M, vi điều khiển được học trong lớp này, được xếp loại

51
00:03:40,910 --> 00:03:42,700
vào kiến trúc Harvard.

52
00:03:42,700 --> 00:03:46,130
Nó khác về cơ bản so với máy tính kiểu Von Neumann.

53
00:03:46,130 --> 00:03:51,080
Ta vẫn có vi xử lý, thực thi câu lệnh.

54
00:03:51,080 --> 00:03:55,860
Cũng có ROM, chứa chương trình.

55
00:03:55,860 --> 00:03:58,580

56
00:03:58,580 --> 00:04:06,330
Vi xử lý và ROM kết nối thông qua 1 bus, cho phép bạn

57
00:04:06,330 --> 00:04:11,765
để dịch mã mã lệnh.

58
00:04:11,765 --> 00:04:16,320
ICode bus này cho phép processor lấy mã lệnh.

59
00:04:16,320 --> 00:04:23,660
Vi xử lý này còn bus thứ 2.

60
00:04:23,660 --> 00:04:32,290
Bus này goi là bus hệ thống, ta thấy RAM,

61
00:04:32,290 --> 00:04:39,970
chứa dữ liệu và thiết bị ngoại vi, 

62
00:04:39,970 --> 00:04:42,130
gắn với bus này.

63
00:04:42,130 --> 00:04:47,400
Có thêm bus thứ 2 nghĩa là bạn có thể làm 2 thứ 1 lúc.

64
00:04:47,400 --> 00:04:55,740
Vi xử lý có thể lấy mã lệnh,

65
00:04:55,740 --> 00:05:01,680
đồng thời ghi dữ liệu vào RAM.

66
00:05:01,680 --> 00:05:04,940
Bằng cách này máy tính chạy nhanh hơn nhiều.

67
00:05:04,940 --> 00:05:09,570
Vi xử lý ta đang xài, Texas Instruments

68
00:05:09,570 --> 00:05:20,310
TM4C123, với nhân Cortex M4, thực tế có 5 hay 6

69
00:05:20,310 --> 00:05:27,040
bus, cho phép 5 hay 6 tác vụ diễn ra cùng lúc.

70
00:05:27,040 --> 00:05:33,576
