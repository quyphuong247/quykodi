0
00:00:00,000 --> 00:00:00,001
http://youtu.be/3727LI4TIeE

1
00:00:00,000 --> 00:00:00,170

2
00:00:00,170 --> 00:00:01,961
DR. JONATHAN VALVANO:
Professor Yerraballi,

3
00:00:01,961 --> 00:00:03,600
what are we going to learn today?

4
00:00:03,600 --> 00:00:05,308
DR. RAMESH YERRABALLI:
Today, we're going

5
00:00:05,308 --> 00:00:07,290
to look at an important
topic, interrupts.

6
00:00:07,290 --> 00:00:11,590
Interrupts are what make embedded
systems truly responsive and ready

7
00:00:11,590 --> 00:00:13,369
for real time.

8
00:00:13,369 --> 00:00:15,660
DR. JONATHAN VALVANO: Interrupts
are my favorite topic,

9
00:00:15,660 --> 00:00:21,100
and they allow the computer to work
on multiple tasks just like humans do.

10
00:00:21,100 --> 00:00:23,840
When the phone rings, we answer it.

11
00:00:23,840 --> 00:00:25,940
And when the alarm goes off, we wake up.

12
00:00:25,940 --> 00:00:27,910
And when I'm hungry, I eat.

13
00:00:27,910 --> 00:00:32,980
So just like humans, some tasks
can be scheduled in advance.

14
00:00:32,980 --> 00:00:38,009
But there are other tasks that we
just respond to when they happen.

15
00:00:38,009 --> 00:00:39,800
DR. RAMESH YERRABALLI:
So if everything was

16
00:00:39,800 --> 00:00:42,630
done using busy-wait
synchronization, that

17
00:00:42,630 --> 00:00:46,560
would look like me staring at
the phone for it to ring instead

18
00:00:46,560 --> 00:00:48,529
of just picking it up when it rings.

19
00:00:48,529 --> 00:00:50,320
DR. JONATHAN VALVANO:
Yes, interrupts allow

20
00:00:50,320 --> 00:00:53,580
the system to make efficient
use of processor time

21
00:00:53,580 --> 00:00:58,772
so that we can perform other tasks while
we're waiting for the I/O to complete.

22
00:00:58,772 --> 00:01:01,310
DR. RAMESH YERRABALLI: Of
course, for interrupts to work,

23
00:01:01,310 --> 00:01:06,490
we need support from both the processor
and the device that it interfaces.

24
00:01:06,490 --> 00:01:10,180
Devices can be internal,
like the SysTick counter,

25
00:01:10,180 --> 00:01:14,094
or they could be external
like switches and UART.

26
00:01:14,094 --> 00:01:17,260
DR. JONATHAN VALVANO: From a programmer
standpoint, we will do three things.

27
00:01:17,260 --> 00:01:19,730
First, we must initialize the interrupt.

28
00:01:19,730 --> 00:01:23,280
And second, we'll have to write
an interrupt service routine which

29
00:01:23,280 --> 00:01:25,680
processes or services that interrupt.

30
00:01:25,680 --> 00:01:30,060
And third, we're going to need a way
for the interrupt service routine

31
00:01:30,060 --> 00:01:32,779
to communicate with the main thread.

32
00:01:32,779 --> 00:01:35,070
DR. RAMESH YERRABALLI: And
from a processor standpoint,

33
00:01:35,070 --> 00:01:39,520
we will look at what happens behind
the scenes when an interrupt occurs.

34
00:01:39,520 --> 00:01:44,100
That is we look at what transpires
upon a context switch-- that

35
00:01:44,100 --> 00:01:47,450
is from the background thread
to the foreground thread

36
00:01:47,450 --> 00:01:49,750
or the foreground thread
to the background thread.

37
00:01:49,750 --> 00:01:50,930
DR. JONATHAN VALVANO: Yes,
but Professor Yerraballi,

38
00:01:50,930 --> 00:01:52,460
you know I like to build things.

39
00:01:52,460 --> 00:01:53,800
What are we going to build?

40
00:01:53,800 --> 00:01:56,216
DR. RAMESH YERRABALLI: We're
going to build something fun.

41
00:01:56,216 --> 00:01:59,570
In fact, we're going to build a
robot car using DC motors that

42
00:01:59,570 --> 00:02:02,980
will control the duty
cycle of the DC motor

43
00:02:02,980 --> 00:02:05,997
by using interrupts to
control precise timing.

44
00:02:05,997 --> 00:02:08,080
DR. JONATHAN VALVANO: But
I don't like to go slow,

45
00:02:08,080 --> 00:02:11,250
and this car will go really fast.

46
00:02:11,250 --> 00:02:14,100
DR. RAMESH YERRABALLI:
Yes, so let's build it.
