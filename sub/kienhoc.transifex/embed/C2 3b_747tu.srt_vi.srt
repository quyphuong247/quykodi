0
00:00:00,000 --> 00:00:00,001
http://youtu.be/F9HZfJWdV-A khang_vgu

1
00:00:00,000 --> 00:00:02,720

2
00:00:02,720 --> 00:00:06,070
Vâng, ta đã biết thanh ghi là gì rồi, 

3
00:00:06,070 --> 00:00:10,470
và có những lệnh để vận hành những thanh ghi này

4
00:00:10,470 --> 00:00:17,680
bây giờ hãy tìm hiểu, dòng lệnh là như thế nào? 

5
00:00:17,680 --> 00:00:19,335
đây là định dạng của dòng lệnh

6
00:00:19,335 --> 00:00:21,950

7
00:00:21,950 --> 00:00:23,170
một dòng lệnh

8
00:00:23,170 --> 00:00:25,300
bắt đầu với một ví dụ đơn giản trước

9
00:00:25,300 --> 00:00:27,180
nó sẽ có cách để thực hiện

10
00:00:27,180 --> 00:00:31,910
ví dụ, tôi muốn chuyển một thứ gì đó vào một thanh ghi

11
00:00:31,910 --> 00:00:34,520

12
00:00:34,520 --> 00:00:38,940
và trong trường hợp này, tôi muốn chuyển số 100 vào thanh ghi R0

13
00:00:38,940 --> 00:00:42,150
thanh ghi R0

14
00:00:42,150 --> 00:00:53,410
và dòng lệnh như này có thể cho thấy mục đích, 
bằng cách ghi chú nó

15
00:00:53,410 --> 00:00:54,350
...

16
00:00:54,350 --> 00:00:55,280
ta để một dòng ghi chú ở đây

17
00:00:55,280 --> 00:01:01,630
vi dụ như, mục đích của dòng lệnh này để đặt kích thước của cái bàn

18
00:01:01,630 --> 00:01:07,915
ta chọn một cái bàn, kích thước là 100

19
00:01:07,915 --> 00:01:08,960
100

20
00:01:08,960 --> 00:01:10,440
ta đặt một ghi chú ở đây

21
00:01:10,440 --> 00:01:15,770
Và ghi chú được prefixed bằng dấu chấm phẩy ( ; )

22
00:01:15,770 --> 00:01:20,770
một dòng lệnh như này cần có nhãn 

23
00:01:20,770 --> 00:01:25,190
ví dụ, đây là dòng khởi tạo, và ta có một nhãn

24
00:01:25,190 --> 00:01:31,400
và xem lại dòng lệnh, ta thấy

25
00:01:31,400 --> 00:01:38,960
dòng lệnh này có một mã vận hành,
và các toán hạng 

26
00:01:38,960 --> 00:01:42,890
dòng lệnh này cần hai toán hạng 

27
00:01:42,890 --> 00:01:46,700
hoặc có thể dòng lệnh sẽ cần 
ba, bốn 


28
00:01:46,700 --> 00:01:49,670
hoặc không toán hạng nào

29
00:01:49,670 --> 00:01:55,260
sau đó, ta có một dòng ghi chú

30
00:01:55,260 --> 00:02:01,390
đoạn mã tốt thì luôn phải có nhiều dòng ghi chú 

31
00:02:01,390 --> 00:02:08,050
điều đó sẽ giúp người khác dễ hiểu khi đọc 

32
00:02:08,050 --> 00:02:11,300
và một cái nhãn

33
00:02:11,300 --> 00:02:15,460
như vậy những dòng ghi chú và nhãn thì không bắt buộc,



34
00:02:15,460 --> 00:02:17,870
nhưng mỗi dòng lệnh thì cần có một mã vận hành

35
00:02:17,870 --> 00:02:21,420
vì vậy nó cho ta biết một lệnh sẽ như thế nào

36
00:02:21,420 --> 00:02:27,300
bây giờ là những loại thao tác ta cần thực hiện

37
00:02:27,300 --> 00:02:32,170
các thao tác sẽ có 4 loại 

38
00:02:32,170 --> 00:02:38,730
loại đầu, quan trọng nhất , là sự truy cập bộ nhớ

39
00:02:38,730 --> 00:02:42,350

40
00:02:42,350 --> 00:02:51,430
sự truy cập bộ nhớ là tải và lưu giữ dữ liệu 

41
00:02:51,430 --> 00:02:54,320
để tải dữ liệu 

42
00:02:54,320 --> 00:02:58,110
ví dự như, ta có những thanh ghi
và nó được đặt trong CPU 

43
00:02:58,110 --> 00:03:01,810
cấu thành bộ nhớ Memory

44
00:03:01,810 --> 00:03:06,500
vì vậy, khi nó đến thao tác tải và lưu trữ,


45
00:03:06,500 --> 00:03:12,660
nghĩa là tải từ bộ nhớ và lưu trữ vào bộ nhớ

46
00:03:12,660 --> 00:03:15,360

47
00:03:15,360 --> 00:03:20,030
vi dụ với thao tác tải 

48
00:03:20,030 --> 00:03:30,690
với LDR R1, [R0]

49
00:03:30,690 --> 00:03:38,030
dòng lệnh này sẽ báo với hệ thống là 
ta muốn lưu vào thanh ghi R1

50
00:03:38,030 --> 00:03:42,990

51
00:03:42,990 --> 00:03:52,830
vào thanh ghi R1, ta muốn lưu trữ nội dung của bộ nhớ

52
00:03:52,830 --> 00:03:54,930
có một địa chỉ ở đây

53
00:03:54,930 --> 00:03:56,710
nghĩa là nó sẽ giữ một địa chỉ 

54
00:03:56,710 --> 00:04:02,020
là hãy đến vị trí đó, truy cập nội dung của địa chỉ

55
00:04:02,020 --> 00:04:04,310
và đặt nó vào thanh ghi R1

56
00:04:04,310 --> 00:04:08,420
và đó là lệnh cho thao tác truy cập bộ nhớ

57
00:04:08,420 --> 00:04:13,590
dòng lệnh thứ hai 
ta sẽ làm những thao tác tiếp theo 

58
00:04:13,590 --> 00:04:15,700
ta đưa vào những thanh ghi 

59
00:04:15,700 --> 00:04:23,690
và thao tác thứ hai la phép toán số học và luận lý (logic)

60
00:04:23,690 --> 00:04:28,560
các phép toán này có thẻ là 

61
00:04:28,560 --> 00:04:33,750
cộng, trừ, nhân, chia,...

62
00:04:33,750 --> 00:04:35,690
....

63
00:04:35,690 --> 00:04:41,270
hoặc có thể là phép toán luận lý như phép toán AND

64
00:04:41,270 --> 00:04:43,940
phép toán dịch

65
00:04:43,940 --> 00:04:47,590
đây là ví dụ vè thêm phép toán

66
00:04:47,590 --> 00:04:56,000
cộng R1, R3, R7 

67
00:04:56,000 --> 00:05:03,130
lệnh này nói rằng, 
lấy nội dung của R7 và R3 

68
00:05:03,130 --> 00:05:05,020
cộng nó lại và đặt vào R1 

69
00:05:05,020 --> 00:05:09,320

70
00:05:09,320 --> 00:05:11,560
tiếp đến là loại thao tác thử ba

71
00:05:11,560 --> 00:05:14,040
là thao tác điều khiển 

72
00:05:14,040 --> 00:05:30,470
nghĩa là những thao tác thay đổi 
"dòng chảy của mã"

73
00:05:30,470 --> 00:05:35,430
"dòng chảy của mã" ở đây là, trong chương trình 


74
00:05:35,430 --> 00:05:41,670
chương trình sẽ rẽ nhánh từ vị trí này
tới vị trí khác 

75
00:05:41,670 --> 00:05:42,660
đó là chương trình con 

76
00:05:42,660 --> 00:05:47,900
đây là một ví dụ về lệnh điều khiển 

77
00:05:47,900 --> 00:05:56,140
một nhánh thì tương đương với một nhãn,
nó là isEqual

78
00:05:56,140 --> 00:06:03,870
ở đây nói là, nếu Z bit bằng với 1,


79
00:06:03,870 --> 00:06:10,150
ở đây, cách ta định nghĩa 2 cái bằng nhau

80
00:06:10,150 --> 00:06:18,190
nhãn sẽ như thế này

81
00:06:18,190 --> 00:06:20,080
...

82
00:06:20,080 --> 00:06:23,950

83
00:06:23,950 --> 00:06:27,660
loại thao tác cuối cùng là những lệnh  đặc biệt

84
00:06:27,660 --> 00:06:32,630
những lệnh này thì không có lệnh tương đương

85
00:06:32,630 --> 00:06:36,720
chúng không phải các phép toán luận lý,
nhưng chúng có mục đích đặc biệt

86
00:06:36,720 --> 00:06:41,690
những lệnh đặc biệt này, ví dụ như 
đóng hoặc khởi động sự ngắt (interrupt)

87
00:06:41,690 --> 00:06:44,780
...

88
00:06:44,780 --> 00:06:50,900
đây là ví dụ của một lệnh đặc biệt 

89
00:06:50,900 --> 00:07:03,900
đây là CPSIE với một toán hạng I, 


90
00:07:03,900 --> 00:07:04,200
nó thông báo cho hệ thống, để khởi động interrupt 

91
00:07:04,200 --> 00:07:06,140
E ở đây là để khởi động

92
00:07:06,140 --> 00:07:14,650
và cũng có một lệnh tương tự, là
CPSID, 


93
00:07:14,650 --> 00:07:15,900
để thông báo hệ thống đóng (interrupt)

94
00:07:15,900 --> 00:07:27,865
